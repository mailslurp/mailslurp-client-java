/*
 * MailSlurp API
 * MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It's designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
 *
 * The version of the OpenAPI document: 6.5.2
 * Contact: contact@mailslurp.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.mailslurp.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.UUID;

/**
 * Complaint
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-02-18T05:13:15.100Z[GMT]")
public class Complaint {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private UUID id;

  public static final String SERIALIZED_NAME_USER_ID = "userId";
  @SerializedName(SERIALIZED_NAME_USER_ID)
  private UUID userId;

  public static final String SERIALIZED_NAME_EVENT_TYPE = "eventType";
  @SerializedName(SERIALIZED_NAME_EVENT_TYPE)
  private String eventType;

  public static final String SERIALIZED_NAME_MAIL_SOURCE = "mailSource";
  @SerializedName(SERIALIZED_NAME_MAIL_SOURCE)
  private String mailSource;

  public static final String SERIALIZED_NAME_MAIL_MESSAGE_ID = "mailMessageId";
  @SerializedName(SERIALIZED_NAME_MAIL_MESSAGE_ID)
  private String mailMessageId;

  public static final String SERIALIZED_NAME_COMPLAINT_RECIPIENT = "complaintRecipient";
  @SerializedName(SERIALIZED_NAME_COMPLAINT_RECIPIENT)
  private String complaintRecipient;

  public static final String SERIALIZED_NAME_CREATED_AT = "createdAt";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private OffsetDateTime createdAt;

  public static final String SERIALIZED_NAME_UPDATED_AT = "updatedAt";
  @SerializedName(SERIALIZED_NAME_UPDATED_AT)
  private OffsetDateTime updatedAt;


  public Complaint id(UUID id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(required = true, value = "")

  public UUID getId() {
    return id;
  }


  public void setId(UUID id) {
    this.id = id;
  }


  public Complaint userId(UUID userId) {
    
    this.userId = userId;
    return this;
  }

   /**
   * Get userId
   * @return userId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public UUID getUserId() {
    return userId;
  }


  public void setUserId(UUID userId) {
    this.userId = userId;
  }


  public Complaint eventType(String eventType) {
    
    this.eventType = eventType;
    return this;
  }

   /**
   * Get eventType
   * @return eventType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getEventType() {
    return eventType;
  }


  public void setEventType(String eventType) {
    this.eventType = eventType;
  }


  public Complaint mailSource(String mailSource) {
    
    this.mailSource = mailSource;
    return this;
  }

   /**
   * Get mailSource
   * @return mailSource
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getMailSource() {
    return mailSource;
  }


  public void setMailSource(String mailSource) {
    this.mailSource = mailSource;
  }


  public Complaint mailMessageId(String mailMessageId) {
    
    this.mailMessageId = mailMessageId;
    return this;
  }

   /**
   * Get mailMessageId
   * @return mailMessageId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getMailMessageId() {
    return mailMessageId;
  }


  public void setMailMessageId(String mailMessageId) {
    this.mailMessageId = mailMessageId;
  }


  public Complaint complaintRecipient(String complaintRecipient) {
    
    this.complaintRecipient = complaintRecipient;
    return this;
  }

   /**
   * Get complaintRecipient
   * @return complaintRecipient
  **/
  @ApiModelProperty(required = true, value = "")

  public String getComplaintRecipient() {
    return complaintRecipient;
  }


  public void setComplaintRecipient(String complaintRecipient) {
    this.complaintRecipient = complaintRecipient;
  }


  public Complaint createdAt(OffsetDateTime createdAt) {
    
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Get createdAt
   * @return createdAt
  **/
  @ApiModelProperty(required = true, value = "")

  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }


  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }


  public Complaint updatedAt(OffsetDateTime updatedAt) {
    
    this.updatedAt = updatedAt;
    return this;
  }

   /**
   * Get updatedAt
   * @return updatedAt
  **/
  @ApiModelProperty(required = true, value = "")

  public OffsetDateTime getUpdatedAt() {
    return updatedAt;
  }


  public void setUpdatedAt(OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Complaint complaint = (Complaint) o;
    return Objects.equals(this.id, complaint.id) &&
        Objects.equals(this.userId, complaint.userId) &&
        Objects.equals(this.eventType, complaint.eventType) &&
        Objects.equals(this.mailSource, complaint.mailSource) &&
        Objects.equals(this.mailMessageId, complaint.mailMessageId) &&
        Objects.equals(this.complaintRecipient, complaint.complaintRecipient) &&
        Objects.equals(this.createdAt, complaint.createdAt) &&
        Objects.equals(this.updatedAt, complaint.updatedAt);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, userId, eventType, mailSource, mailMessageId, complaintRecipient, createdAt, updatedAt);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Complaint {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    eventType: ").append(toIndentedString(eventType)).append("\n");
    sb.append("    mailSource: ").append(toIndentedString(mailSource)).append("\n");
    sb.append("    mailMessageId: ").append(toIndentedString(mailMessageId)).append("\n");
    sb.append("    complaintRecipient: ").append(toIndentedString(complaintRecipient)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

