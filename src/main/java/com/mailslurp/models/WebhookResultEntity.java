/*
 * MailSlurp API
 * MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It's designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://www.mailslurp.com/docs/) - [Examples](https://github.com/mailslurp/examples) repository 
 *
 * The version of the OpenAPI document: 6.5.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.mailslurp.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.UUID;

/**
 * WebhookResultEntity
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-06-22T07:51:08.301Z[GMT]")
public class WebhookResultEntity {
  public static final String SERIALIZED_NAME_CREATED_AT = "createdAt";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private OffsetDateTime createdAt;

  /**
   * Gets or Sets httpMethod
   */
  @JsonAdapter(HttpMethodEnum.Adapter.class)
  public enum HttpMethodEnum {
    GET("GET"),
    
    HEAD("HEAD"),
    
    POST("POST"),
    
    PUT("PUT"),
    
    PATCH("PATCH"),
    
    DELETE("DELETE"),
    
    OPTIONS("OPTIONS"),
    
    TRACE("TRACE");

    private String value;

    HttpMethodEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static HttpMethodEnum fromValue(String value) {
      for (HttpMethodEnum b : HttpMethodEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<HttpMethodEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final HttpMethodEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public HttpMethodEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return HttpMethodEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_HTTP_METHOD = "httpMethod";
  @SerializedName(SERIALIZED_NAME_HTTP_METHOD)
  private HttpMethodEnum httpMethod;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private UUID id;

  public static final String SERIALIZED_NAME_INBOX_ID = "inboxId";
  @SerializedName(SERIALIZED_NAME_INBOX_ID)
  private UUID inboxId;

  public static final String SERIALIZED_NAME_MESSAGE_ID = "messageId";
  @SerializedName(SERIALIZED_NAME_MESSAGE_ID)
  private String messageId;

  public static final String SERIALIZED_NAME_RESPONSE_BODY_EXTRACT = "responseBodyExtract";
  @SerializedName(SERIALIZED_NAME_RESPONSE_BODY_EXTRACT)
  private String responseBodyExtract;

  public static final String SERIALIZED_NAME_RESPONSE_STATUS = "responseStatus";
  @SerializedName(SERIALIZED_NAME_RESPONSE_STATUS)
  private Integer responseStatus;

  public static final String SERIALIZED_NAME_RESPONSE_TIME_MILLIS = "responseTimeMillis";
  @SerializedName(SERIALIZED_NAME_RESPONSE_TIME_MILLIS)
  private Long responseTimeMillis;

  public static final String SERIALIZED_NAME_UPDATED_AT = "updatedAt";
  @SerializedName(SERIALIZED_NAME_UPDATED_AT)
  private OffsetDateTime updatedAt;

  public static final String SERIALIZED_NAME_USER_ID = "userId";
  @SerializedName(SERIALIZED_NAME_USER_ID)
  private UUID userId;

  /**
   * Gets or Sets webhookEvent
   */
  @JsonAdapter(WebhookEventEnum.Adapter.class)
  public enum WebhookEventEnum {
    EMAIL_RECEIVED("EMAIL_RECEIVED"),
    
    NEW_EMAIL("NEW_EMAIL"),
    
    NEW_CONTACT("NEW_CONTACT"),
    
    NEW_ATTACHMENT("NEW_ATTACHMENT");

    private String value;

    WebhookEventEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static WebhookEventEnum fromValue(String value) {
      for (WebhookEventEnum b : WebhookEventEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<WebhookEventEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final WebhookEventEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public WebhookEventEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return WebhookEventEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_WEBHOOK_EVENT = "webhookEvent";
  @SerializedName(SERIALIZED_NAME_WEBHOOK_EVENT)
  private WebhookEventEnum webhookEvent;

  public static final String SERIALIZED_NAME_WEBHOOK_ID = "webhookId";
  @SerializedName(SERIALIZED_NAME_WEBHOOK_ID)
  private UUID webhookId;

  public static final String SERIALIZED_NAME_WEBHOOK_URL = "webhookUrl";
  @SerializedName(SERIALIZED_NAME_WEBHOOK_URL)
  private String webhookUrl;


  public WebhookResultEntity createdAt(OffsetDateTime createdAt) {
    
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Get createdAt
   * @return createdAt
  **/
  @ApiModelProperty(required = true, value = "")

  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }


  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }


  public WebhookResultEntity httpMethod(HttpMethodEnum httpMethod) {
    
    this.httpMethod = httpMethod;
    return this;
  }

   /**
   * Get httpMethod
   * @return httpMethod
  **/
  @ApiModelProperty(required = true, value = "")

  public HttpMethodEnum getHttpMethod() {
    return httpMethod;
  }


  public void setHttpMethod(HttpMethodEnum httpMethod) {
    this.httpMethod = httpMethod;
  }


  public WebhookResultEntity id(UUID id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public UUID getId() {
    return id;
  }


  public void setId(UUID id) {
    this.id = id;
  }


  public WebhookResultEntity inboxId(UUID inboxId) {
    
    this.inboxId = inboxId;
    return this;
  }

   /**
   * Get inboxId
   * @return inboxId
  **/
  @ApiModelProperty(required = true, value = "")

  public UUID getInboxId() {
    return inboxId;
  }


  public void setInboxId(UUID inboxId) {
    this.inboxId = inboxId;
  }


  public WebhookResultEntity messageId(String messageId) {
    
    this.messageId = messageId;
    return this;
  }

   /**
   * Get messageId
   * @return messageId
  **/
  @ApiModelProperty(required = true, value = "")

  public String getMessageId() {
    return messageId;
  }


  public void setMessageId(String messageId) {
    this.messageId = messageId;
  }


  public WebhookResultEntity responseBodyExtract(String responseBodyExtract) {
    
    this.responseBodyExtract = responseBodyExtract;
    return this;
  }

   /**
   * Get responseBodyExtract
   * @return responseBodyExtract
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getResponseBodyExtract() {
    return responseBodyExtract;
  }


  public void setResponseBodyExtract(String responseBodyExtract) {
    this.responseBodyExtract = responseBodyExtract;
  }


  public WebhookResultEntity responseStatus(Integer responseStatus) {
    
    this.responseStatus = responseStatus;
    return this;
  }

   /**
   * Get responseStatus
   * @return responseStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getResponseStatus() {
    return responseStatus;
  }


  public void setResponseStatus(Integer responseStatus) {
    this.responseStatus = responseStatus;
  }


  public WebhookResultEntity responseTimeMillis(Long responseTimeMillis) {
    
    this.responseTimeMillis = responseTimeMillis;
    return this;
  }

   /**
   * Get responseTimeMillis
   * @return responseTimeMillis
  **/
  @ApiModelProperty(required = true, value = "")

  public Long getResponseTimeMillis() {
    return responseTimeMillis;
  }


  public void setResponseTimeMillis(Long responseTimeMillis) {
    this.responseTimeMillis = responseTimeMillis;
  }


  public WebhookResultEntity updatedAt(OffsetDateTime updatedAt) {
    
    this.updatedAt = updatedAt;
    return this;
  }

   /**
   * Get updatedAt
   * @return updatedAt
  **/
  @ApiModelProperty(required = true, value = "")

  public OffsetDateTime getUpdatedAt() {
    return updatedAt;
  }


  public void setUpdatedAt(OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
  }


  public WebhookResultEntity userId(UUID userId) {
    
    this.userId = userId;
    return this;
  }

   /**
   * Get userId
   * @return userId
  **/
  @ApiModelProperty(required = true, value = "")

  public UUID getUserId() {
    return userId;
  }


  public void setUserId(UUID userId) {
    this.userId = userId;
  }


  public WebhookResultEntity webhookEvent(WebhookEventEnum webhookEvent) {
    
    this.webhookEvent = webhookEvent;
    return this;
  }

   /**
   * Get webhookEvent
   * @return webhookEvent
  **/
  @ApiModelProperty(required = true, value = "")

  public WebhookEventEnum getWebhookEvent() {
    return webhookEvent;
  }


  public void setWebhookEvent(WebhookEventEnum webhookEvent) {
    this.webhookEvent = webhookEvent;
  }


  public WebhookResultEntity webhookId(UUID webhookId) {
    
    this.webhookId = webhookId;
    return this;
  }

   /**
   * Get webhookId
   * @return webhookId
  **/
  @ApiModelProperty(required = true, value = "")

  public UUID getWebhookId() {
    return webhookId;
  }


  public void setWebhookId(UUID webhookId) {
    this.webhookId = webhookId;
  }


  public WebhookResultEntity webhookUrl(String webhookUrl) {
    
    this.webhookUrl = webhookUrl;
    return this;
  }

   /**
   * Get webhookUrl
   * @return webhookUrl
  **/
  @ApiModelProperty(required = true, value = "")

  public String getWebhookUrl() {
    return webhookUrl;
  }


  public void setWebhookUrl(String webhookUrl) {
    this.webhookUrl = webhookUrl;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WebhookResultEntity webhookResultEntity = (WebhookResultEntity) o;
    return Objects.equals(this.createdAt, webhookResultEntity.createdAt) &&
        Objects.equals(this.httpMethod, webhookResultEntity.httpMethod) &&
        Objects.equals(this.id, webhookResultEntity.id) &&
        Objects.equals(this.inboxId, webhookResultEntity.inboxId) &&
        Objects.equals(this.messageId, webhookResultEntity.messageId) &&
        Objects.equals(this.responseBodyExtract, webhookResultEntity.responseBodyExtract) &&
        Objects.equals(this.responseStatus, webhookResultEntity.responseStatus) &&
        Objects.equals(this.responseTimeMillis, webhookResultEntity.responseTimeMillis) &&
        Objects.equals(this.updatedAt, webhookResultEntity.updatedAt) &&
        Objects.equals(this.userId, webhookResultEntity.userId) &&
        Objects.equals(this.webhookEvent, webhookResultEntity.webhookEvent) &&
        Objects.equals(this.webhookId, webhookResultEntity.webhookId) &&
        Objects.equals(this.webhookUrl, webhookResultEntity.webhookUrl);
  }

  @Override
  public int hashCode() {
    return Objects.hash(createdAt, httpMethod, id, inboxId, messageId, responseBodyExtract, responseStatus, responseTimeMillis, updatedAt, userId, webhookEvent, webhookId, webhookUrl);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WebhookResultEntity {\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    httpMethod: ").append(toIndentedString(httpMethod)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    inboxId: ").append(toIndentedString(inboxId)).append("\n");
    sb.append("    messageId: ").append(toIndentedString(messageId)).append("\n");
    sb.append("    responseBodyExtract: ").append(toIndentedString(responseBodyExtract)).append("\n");
    sb.append("    responseStatus: ").append(toIndentedString(responseStatus)).append("\n");
    sb.append("    responseTimeMillis: ").append(toIndentedString(responseTimeMillis)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    webhookEvent: ").append(toIndentedString(webhookEvent)).append("\n");
    sb.append("    webhookId: ").append(toIndentedString(webhookId)).append("\n");
    sb.append("    webhookUrl: ").append(toIndentedString(webhookUrl)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

