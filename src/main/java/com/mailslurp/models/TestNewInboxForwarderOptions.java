/*
 * MailSlurp API
 * MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It's designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://www.mailslurp.com/docs/) - [Examples](https://github.com/mailslurp/examples) repository
 *
 * The version of the OpenAPI document: 6.5.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.mailslurp.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.mailslurp.models.CreateInboxForwarderOptions;
import com.mailslurp.models.InboxForwarderTestOptions;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * TestNewInboxForwarderOptions
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-01-06T07:16:31.805Z[GMT]")
public class TestNewInboxForwarderOptions {
  public static final String SERIALIZED_NAME_INBOX_FORWARDER_TEST_OPTIONS = "inboxForwarderTestOptions";
  @SerializedName(SERIALIZED_NAME_INBOX_FORWARDER_TEST_OPTIONS)
  private InboxForwarderTestOptions inboxForwarderTestOptions;

  public static final String SERIALIZED_NAME_CREATE_INBOX_FORWARDER_OPTIONS = "createInboxForwarderOptions";
  @SerializedName(SERIALIZED_NAME_CREATE_INBOX_FORWARDER_OPTIONS)
  private CreateInboxForwarderOptions createInboxForwarderOptions;


  public TestNewInboxForwarderOptions inboxForwarderTestOptions(InboxForwarderTestOptions inboxForwarderTestOptions) {
    
    this.inboxForwarderTestOptions = inboxForwarderTestOptions;
    return this;
  }

   /**
   * Get inboxForwarderTestOptions
   * @return inboxForwarderTestOptions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public InboxForwarderTestOptions getInboxForwarderTestOptions() {
    return inboxForwarderTestOptions;
  }


  public void setInboxForwarderTestOptions(InboxForwarderTestOptions inboxForwarderTestOptions) {
    this.inboxForwarderTestOptions = inboxForwarderTestOptions;
  }


  public TestNewInboxForwarderOptions createInboxForwarderOptions(CreateInboxForwarderOptions createInboxForwarderOptions) {
    
    this.createInboxForwarderOptions = createInboxForwarderOptions;
    return this;
  }

   /**
   * Get createInboxForwarderOptions
   * @return createInboxForwarderOptions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CreateInboxForwarderOptions getCreateInboxForwarderOptions() {
    return createInboxForwarderOptions;
  }


  public void setCreateInboxForwarderOptions(CreateInboxForwarderOptions createInboxForwarderOptions) {
    this.createInboxForwarderOptions = createInboxForwarderOptions;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TestNewInboxForwarderOptions testNewInboxForwarderOptions = (TestNewInboxForwarderOptions) o;
    return Objects.equals(this.inboxForwarderTestOptions, testNewInboxForwarderOptions.inboxForwarderTestOptions) &&
        Objects.equals(this.createInboxForwarderOptions, testNewInboxForwarderOptions.createInboxForwarderOptions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(inboxForwarderTestOptions, createInboxForwarderOptions);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TestNewInboxForwarderOptions {\n");
    sb.append("    inboxForwarderTestOptions: ").append(toIndentedString(inboxForwarderTestOptions)).append("\n");
    sb.append("    createInboxForwarderOptions: ").append(toIndentedString(createInboxForwarderOptions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

