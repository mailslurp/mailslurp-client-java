/*
 * MailSlurp API
 * MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It's designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://www.mailslurp.com/docs/) - [Examples](https://github.com/mailslurp/examples) repository
 *
 * The version of the OpenAPI document: 6.5.2
 * Contact: contact@mailslurp.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.mailslurp.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;

/**
 * Expiration defaults for your account
 */
@ApiModel(description = "Expiration defaults for your account")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-01-06T09:12:50.568Z[GMT]")
public class ExpirationDefaults {
  public static final String SERIALIZED_NAME_DEFAULT_EXPIRATION_MILLIS = "defaultExpirationMillis";
  @SerializedName(SERIALIZED_NAME_DEFAULT_EXPIRATION_MILLIS)
  private Long defaultExpirationMillis;

  public static final String SERIALIZED_NAME_MAX_EXPIRATION_MILLIS = "maxExpirationMillis";
  @SerializedName(SERIALIZED_NAME_MAX_EXPIRATION_MILLIS)
  private Long maxExpirationMillis;

  public static final String SERIALIZED_NAME_DEFAULT_EXPIRES_AT = "defaultExpiresAt";
  @SerializedName(SERIALIZED_NAME_DEFAULT_EXPIRES_AT)
  private OffsetDateTime defaultExpiresAt;

  public static final String SERIALIZED_NAME_CAN_PERMANENT_INBOX = "canPermanentInbox";
  @SerializedName(SERIALIZED_NAME_CAN_PERMANENT_INBOX)
  private Boolean canPermanentInbox;

  public static final String SERIALIZED_NAME_NEXT_INBOX_ALLOWS_PERMANENT = "nextInboxAllowsPermanent";
  @SerializedName(SERIALIZED_NAME_NEXT_INBOX_ALLOWS_PERMANENT)
  private Boolean nextInboxAllowsPermanent;


  public ExpirationDefaults defaultExpirationMillis(Long defaultExpirationMillis) {
    
    this.defaultExpirationMillis = defaultExpirationMillis;
    return this;
  }

   /**
   * Get defaultExpirationMillis
   * @return defaultExpirationMillis
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Long getDefaultExpirationMillis() {
    return defaultExpirationMillis;
  }


  public void setDefaultExpirationMillis(Long defaultExpirationMillis) {
    this.defaultExpirationMillis = defaultExpirationMillis;
  }


  public ExpirationDefaults maxExpirationMillis(Long maxExpirationMillis) {
    
    this.maxExpirationMillis = maxExpirationMillis;
    return this;
  }

   /**
   * Get maxExpirationMillis
   * @return maxExpirationMillis
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Long getMaxExpirationMillis() {
    return maxExpirationMillis;
  }


  public void setMaxExpirationMillis(Long maxExpirationMillis) {
    this.maxExpirationMillis = maxExpirationMillis;
  }


  public ExpirationDefaults defaultExpiresAt(OffsetDateTime defaultExpiresAt) {
    
    this.defaultExpiresAt = defaultExpiresAt;
    return this;
  }

   /**
   * Get defaultExpiresAt
   * @return defaultExpiresAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getDefaultExpiresAt() {
    return defaultExpiresAt;
  }


  public void setDefaultExpiresAt(OffsetDateTime defaultExpiresAt) {
    this.defaultExpiresAt = defaultExpiresAt;
  }


  public ExpirationDefaults canPermanentInbox(Boolean canPermanentInbox) {
    
    this.canPermanentInbox = canPermanentInbox;
    return this;
  }

   /**
   * Get canPermanentInbox
   * @return canPermanentInbox
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getCanPermanentInbox() {
    return canPermanentInbox;
  }


  public void setCanPermanentInbox(Boolean canPermanentInbox) {
    this.canPermanentInbox = canPermanentInbox;
  }


  public ExpirationDefaults nextInboxAllowsPermanent(Boolean nextInboxAllowsPermanent) {
    
    this.nextInboxAllowsPermanent = nextInboxAllowsPermanent;
    return this;
  }

   /**
   * Get nextInboxAllowsPermanent
   * @return nextInboxAllowsPermanent
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getNextInboxAllowsPermanent() {
    return nextInboxAllowsPermanent;
  }


  public void setNextInboxAllowsPermanent(Boolean nextInboxAllowsPermanent) {
    this.nextInboxAllowsPermanent = nextInboxAllowsPermanent;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ExpirationDefaults expirationDefaults = (ExpirationDefaults) o;
    return Objects.equals(this.defaultExpirationMillis, expirationDefaults.defaultExpirationMillis) &&
        Objects.equals(this.maxExpirationMillis, expirationDefaults.maxExpirationMillis) &&
        Objects.equals(this.defaultExpiresAt, expirationDefaults.defaultExpiresAt) &&
        Objects.equals(this.canPermanentInbox, expirationDefaults.canPermanentInbox) &&
        Objects.equals(this.nextInboxAllowsPermanent, expirationDefaults.nextInboxAllowsPermanent);
  }

  @Override
  public int hashCode() {
    return Objects.hash(defaultExpirationMillis, maxExpirationMillis, defaultExpiresAt, canPermanentInbox, nextInboxAllowsPermanent);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ExpirationDefaults {\n");
    sb.append("    defaultExpirationMillis: ").append(toIndentedString(defaultExpirationMillis)).append("\n");
    sb.append("    maxExpirationMillis: ").append(toIndentedString(maxExpirationMillis)).append("\n");
    sb.append("    defaultExpiresAt: ").append(toIndentedString(defaultExpiresAt)).append("\n");
    sb.append("    canPermanentInbox: ").append(toIndentedString(canPermanentInbox)).append("\n");
    sb.append("    nextInboxAllowsPermanent: ").append(toIndentedString(nextInboxAllowsPermanent)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

