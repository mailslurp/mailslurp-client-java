/*
 * MailSlurp API
 * MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It's designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
 *
 * The version of the OpenAPI document: 6.5.2
 * Contact: contact@mailslurp.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.mailslurp.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.UUID;

/**
 * Result of retrying webhook
 */
@ApiModel(description = "Result of retrying webhook")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-09-17T09:17:50.599Z[GMT]")
public class WebhookRedriveResult {
  public static final String SERIALIZED_NAME_WEBHOOK_RESULT_ID = "webhookResultId";
  @SerializedName(SERIALIZED_NAME_WEBHOOK_RESULT_ID)
  private UUID webhookResultId;

  public static final String SERIALIZED_NAME_SUCCESS = "success";
  @SerializedName(SERIALIZED_NAME_SUCCESS)
  private Boolean success;

  public static final String SERIALIZED_NAME_MESSAGE = "message";
  @SerializedName(SERIALIZED_NAME_MESSAGE)
  private String message;


  public WebhookRedriveResult webhookResultId(UUID webhookResultId) {
    
    this.webhookResultId = webhookResultId;
    return this;
  }

   /**
   * Get webhookResultId
   * @return webhookResultId
  **/
  @ApiModelProperty(required = true, value = "")

  public UUID getWebhookResultId() {
    return webhookResultId;
  }


  public void setWebhookResultId(UUID webhookResultId) {
    this.webhookResultId = webhookResultId;
  }


  public WebhookRedriveResult success(Boolean success) {
    
    this.success = success;
    return this;
  }

   /**
   * Get success
   * @return success
  **/
  @ApiModelProperty(required = true, value = "")

  public Boolean getSuccess() {
    return success;
  }


  public void setSuccess(Boolean success) {
    this.success = success;
  }


  public WebhookRedriveResult message(String message) {
    
    this.message = message;
    return this;
  }

   /**
   * Get message
   * @return message
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getMessage() {
    return message;
  }


  public void setMessage(String message) {
    this.message = message;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WebhookRedriveResult webhookRedriveResult = (WebhookRedriveResult) o;
    return Objects.equals(this.webhookResultId, webhookRedriveResult.webhookResultId) &&
        Objects.equals(this.success, webhookRedriveResult.success) &&
        Objects.equals(this.message, webhookRedriveResult.message);
  }

  @Override
  public int hashCode() {
    return Objects.hash(webhookResultId, success, message);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WebhookRedriveResult {\n");
    sb.append("    webhookResultId: ").append(toIndentedString(webhookResultId)).append("\n");
    sb.append("    success: ").append(toIndentedString(success)).append("\n");
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

