/*
 * MailSlurp API
 * MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It's designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.   ## Resources - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://www.mailslurp.com/docs/) - [Examples](https://github.com/mailslurp/examples) repository  ## Basic Concepts  ### Inboxes  Inboxes have real email addresses that can send and receive emails. You can create inboxes with specific email addresses (using custom domains). You can also use randomly assigned MailSlurp addresses as unique, disposable test addresses.   See the InboxController or [inbox and email address guide](https://www.mailslurp.com/guides/) for more information.  ### Receive Emails You can receive emails in a number of ways. You can fetch emails and attachments directly from an inbox. Or you can use `waitFor` endpoints to hold a connection open until an email is received that matches given criteria (such as subject or body content). You can also use webhooks to have emails from multiple inboxes forwarded to your server via HTTP POST.  InboxController methods with `waitFor` in the name have a long timeout period and instruct MailSlurp to wait until an expected email is received. You can set conditions on email counts, subject or body matches, and more.  Most receive methods only return an email ID and not the full email (to keep response sizes low). To fetch the full body or attachments for an email use the email's ID with EmailController endpoints.  See the InboxController or [receiving emails guide](https://www.mailslurp.com/guides/) for more information.  ### Send Emails You can send templated HTML emails in several ways. You must first create an inbox to send an email. An inbox can have a specific address or a randomly assigned one. You can send emails from an inbox using `to`, `cc`, and `bcc` recipient lists or with contacts and contact groups.   Emails can contain plain-text or HTML bodies. You can also use email templates that support [moustache](https://mustache.github.io/) template variables. You can send attachments by first posting files to the AttachmentController and then using the returned IDs in the `attachments` field of the send options.  See the InboxController or [sending emails guide](https://www.mailslurp.com/guides/) for more information.  ### Templates MailSlurp emails support templates. You can create templates in the dashboard or API that contain [moustache](https://mustache.github.io/) style variables: for instance `Hello {{name}}`. Then when sending emails you can pass a map of variables names and values to be used. Additionally, when sending emails with contact groups you can use properties of the contact in your templates like `{{firstName}}` and `{{lastName}}`.  > You can do a lot more with MailSlurp so see the included documentation for more information.  
 *
 * The version of the OpenAPI document: 6.5.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.mailslurp.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * JsonNode
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2020-02-16T21:46:01.120347+01:00[Europe/Berlin]")
public class JsonNode {
  public static final String SERIALIZED_NAME_ARRAY = "array";
  @SerializedName(SERIALIZED_NAME_ARRAY)
  private Boolean array;

  public static final String SERIALIZED_NAME_BIG_DECIMAL = "bigDecimal";
  @SerializedName(SERIALIZED_NAME_BIG_DECIMAL)
  private Boolean bigDecimal;

  public static final String SERIALIZED_NAME_BIG_INTEGER = "bigInteger";
  @SerializedName(SERIALIZED_NAME_BIG_INTEGER)
  private Boolean bigInteger;

  public static final String SERIALIZED_NAME_BINARY = "binary";
  @SerializedName(SERIALIZED_NAME_BINARY)
  private Boolean binary;

  public static final String SERIALIZED_NAME_BOOLEAN = "boolean";
  @SerializedName(SERIALIZED_NAME_BOOLEAN)
  private Boolean _boolean;

  public static final String SERIALIZED_NAME_CONTAINER_NODE = "containerNode";
  @SerializedName(SERIALIZED_NAME_CONTAINER_NODE)
  private Boolean containerNode;

  public static final String SERIALIZED_NAME_DOUBLE = "double";
  @SerializedName(SERIALIZED_NAME_DOUBLE)
  private Boolean _double;

  public static final String SERIALIZED_NAME_EMPTY = "empty";
  @SerializedName(SERIALIZED_NAME_EMPTY)
  private Boolean empty;

  public static final String SERIALIZED_NAME_FLOAT = "float";
  @SerializedName(SERIALIZED_NAME_FLOAT)
  private Boolean _float;

  public static final String SERIALIZED_NAME_FLOATING_POINT_NUMBER = "floatingPointNumber";
  @SerializedName(SERIALIZED_NAME_FLOATING_POINT_NUMBER)
  private Boolean floatingPointNumber;

  public static final String SERIALIZED_NAME_INT = "int";
  @SerializedName(SERIALIZED_NAME_INT)
  private Boolean _int;

  public static final String SERIALIZED_NAME_INTEGRAL_NUMBER = "integralNumber";
  @SerializedName(SERIALIZED_NAME_INTEGRAL_NUMBER)
  private Boolean integralNumber;

  public static final String SERIALIZED_NAME_LONG = "long";
  @SerializedName(SERIALIZED_NAME_LONG)
  private Boolean _long;

  public static final String SERIALIZED_NAME_MISSING_NODE = "missingNode";
  @SerializedName(SERIALIZED_NAME_MISSING_NODE)
  private Boolean missingNode;

  /**
   * Gets or Sets nodeType
   */
  @JsonAdapter(NodeTypeEnum.Adapter.class)
  public enum NodeTypeEnum {
    ARRAY("ARRAY"),
    
    BINARY("BINARY"),
    
    BOOLEAN("BOOLEAN"),
    
    MISSING("MISSING"),
    
    NULL("NULL"),
    
    NUMBER("NUMBER"),
    
    OBJECT("OBJECT"),
    
    POJO("POJO"),
    
    STRING("STRING");

    private String value;

    NodeTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static NodeTypeEnum fromValue(String value) {
      for (NodeTypeEnum b : NodeTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<NodeTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final NodeTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public NodeTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return NodeTypeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_NODE_TYPE = "nodeType";
  @SerializedName(SERIALIZED_NAME_NODE_TYPE)
  private NodeTypeEnum nodeType;

  public static final String SERIALIZED_NAME_NULL = "null";
  @SerializedName(SERIALIZED_NAME_NULL)
  private Boolean _null;

  public static final String SERIALIZED_NAME_NUMBER = "number";
  @SerializedName(SERIALIZED_NAME_NUMBER)
  private Boolean number;

  public static final String SERIALIZED_NAME_OBJECT = "object";
  @SerializedName(SERIALIZED_NAME_OBJECT)
  private Boolean _object;

  public static final String SERIALIZED_NAME_POJO = "pojo";
  @SerializedName(SERIALIZED_NAME_POJO)
  private Boolean pojo;

  public static final String SERIALIZED_NAME_SHORT = "short";
  @SerializedName(SERIALIZED_NAME_SHORT)
  private Boolean _short;

  public static final String SERIALIZED_NAME_TEXTUAL = "textual";
  @SerializedName(SERIALIZED_NAME_TEXTUAL)
  private Boolean textual;

  public static final String SERIALIZED_NAME_VALUE_NODE = "valueNode";
  @SerializedName(SERIALIZED_NAME_VALUE_NODE)
  private Boolean valueNode;


  public JsonNode array(Boolean array) {
    
    this.array = array;
    return this;
  }

   /**
   * Get array
   * @return array
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getArray() {
    return array;
  }


  public void setArray(Boolean array) {
    this.array = array;
  }


  public JsonNode bigDecimal(Boolean bigDecimal) {
    
    this.bigDecimal = bigDecimal;
    return this;
  }

   /**
   * Get bigDecimal
   * @return bigDecimal
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getBigDecimal() {
    return bigDecimal;
  }


  public void setBigDecimal(Boolean bigDecimal) {
    this.bigDecimal = bigDecimal;
  }


  public JsonNode bigInteger(Boolean bigInteger) {
    
    this.bigInteger = bigInteger;
    return this;
  }

   /**
   * Get bigInteger
   * @return bigInteger
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getBigInteger() {
    return bigInteger;
  }


  public void setBigInteger(Boolean bigInteger) {
    this.bigInteger = bigInteger;
  }


  public JsonNode binary(Boolean binary) {
    
    this.binary = binary;
    return this;
  }

   /**
   * Get binary
   * @return binary
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getBinary() {
    return binary;
  }


  public void setBinary(Boolean binary) {
    this.binary = binary;
  }


  public JsonNode _boolean(Boolean _boolean) {
    
    this._boolean = _boolean;
    return this;
  }

   /**
   * Get _boolean
   * @return _boolean
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getBoolean() {
    return _boolean;
  }


  public void setBoolean(Boolean _boolean) {
    this._boolean = _boolean;
  }


  public JsonNode containerNode(Boolean containerNode) {
    
    this.containerNode = containerNode;
    return this;
  }

   /**
   * Get containerNode
   * @return containerNode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getContainerNode() {
    return containerNode;
  }


  public void setContainerNode(Boolean containerNode) {
    this.containerNode = containerNode;
  }


  public JsonNode _double(Boolean _double) {
    
    this._double = _double;
    return this;
  }

   /**
   * Get _double
   * @return _double
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getDouble() {
    return _double;
  }


  public void setDouble(Boolean _double) {
    this._double = _double;
  }


  public JsonNode empty(Boolean empty) {
    
    this.empty = empty;
    return this;
  }

   /**
   * Get empty
   * @return empty
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getEmpty() {
    return empty;
  }


  public void setEmpty(Boolean empty) {
    this.empty = empty;
  }


  public JsonNode _float(Boolean _float) {
    
    this._float = _float;
    return this;
  }

   /**
   * Get _float
   * @return _float
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getFloat() {
    return _float;
  }


  public void setFloat(Boolean _float) {
    this._float = _float;
  }


  public JsonNode floatingPointNumber(Boolean floatingPointNumber) {
    
    this.floatingPointNumber = floatingPointNumber;
    return this;
  }

   /**
   * Get floatingPointNumber
   * @return floatingPointNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getFloatingPointNumber() {
    return floatingPointNumber;
  }


  public void setFloatingPointNumber(Boolean floatingPointNumber) {
    this.floatingPointNumber = floatingPointNumber;
  }


  public JsonNode _int(Boolean _int) {
    
    this._int = _int;
    return this;
  }

   /**
   * Get _int
   * @return _int
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getInt() {
    return _int;
  }


  public void setInt(Boolean _int) {
    this._int = _int;
  }


  public JsonNode integralNumber(Boolean integralNumber) {
    
    this.integralNumber = integralNumber;
    return this;
  }

   /**
   * Get integralNumber
   * @return integralNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIntegralNumber() {
    return integralNumber;
  }


  public void setIntegralNumber(Boolean integralNumber) {
    this.integralNumber = integralNumber;
  }


  public JsonNode _long(Boolean _long) {
    
    this._long = _long;
    return this;
  }

   /**
   * Get _long
   * @return _long
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getLong() {
    return _long;
  }


  public void setLong(Boolean _long) {
    this._long = _long;
  }


  public JsonNode missingNode(Boolean missingNode) {
    
    this.missingNode = missingNode;
    return this;
  }

   /**
   * Get missingNode
   * @return missingNode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getMissingNode() {
    return missingNode;
  }


  public void setMissingNode(Boolean missingNode) {
    this.missingNode = missingNode;
  }


  public JsonNode nodeType(NodeTypeEnum nodeType) {
    
    this.nodeType = nodeType;
    return this;
  }

   /**
   * Get nodeType
   * @return nodeType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public NodeTypeEnum getNodeType() {
    return nodeType;
  }


  public void setNodeType(NodeTypeEnum nodeType) {
    this.nodeType = nodeType;
  }


  public JsonNode _null(Boolean _null) {
    
    this._null = _null;
    return this;
  }

   /**
   * Get _null
   * @return _null
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getNull() {
    return _null;
  }


  public void setNull(Boolean _null) {
    this._null = _null;
  }


  public JsonNode number(Boolean number) {
    
    this.number = number;
    return this;
  }

   /**
   * Get number
   * @return number
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getNumber() {
    return number;
  }


  public void setNumber(Boolean number) {
    this.number = number;
  }


  public JsonNode _object(Boolean _object) {
    
    this._object = _object;
    return this;
  }

   /**
   * Get _object
   * @return _object
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getObject() {
    return _object;
  }


  public void setObject(Boolean _object) {
    this._object = _object;
  }


  public JsonNode pojo(Boolean pojo) {
    
    this.pojo = pojo;
    return this;
  }

   /**
   * Get pojo
   * @return pojo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getPojo() {
    return pojo;
  }


  public void setPojo(Boolean pojo) {
    this.pojo = pojo;
  }


  public JsonNode _short(Boolean _short) {
    
    this._short = _short;
    return this;
  }

   /**
   * Get _short
   * @return _short
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getShort() {
    return _short;
  }


  public void setShort(Boolean _short) {
    this._short = _short;
  }


  public JsonNode textual(Boolean textual) {
    
    this.textual = textual;
    return this;
  }

   /**
   * Get textual
   * @return textual
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getTextual() {
    return textual;
  }


  public void setTextual(Boolean textual) {
    this.textual = textual;
  }


  public JsonNode valueNode(Boolean valueNode) {
    
    this.valueNode = valueNode;
    return this;
  }

   /**
   * Get valueNode
   * @return valueNode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getValueNode() {
    return valueNode;
  }


  public void setValueNode(Boolean valueNode) {
    this.valueNode = valueNode;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    JsonNode jsonNode = (JsonNode) o;
    return Objects.equals(this.array, jsonNode.array) &&
        Objects.equals(this.bigDecimal, jsonNode.bigDecimal) &&
        Objects.equals(this.bigInteger, jsonNode.bigInteger) &&
        Objects.equals(this.binary, jsonNode.binary) &&
        Objects.equals(this._boolean, jsonNode._boolean) &&
        Objects.equals(this.containerNode, jsonNode.containerNode) &&
        Objects.equals(this._double, jsonNode._double) &&
        Objects.equals(this.empty, jsonNode.empty) &&
        Objects.equals(this._float, jsonNode._float) &&
        Objects.equals(this.floatingPointNumber, jsonNode.floatingPointNumber) &&
        Objects.equals(this._int, jsonNode._int) &&
        Objects.equals(this.integralNumber, jsonNode.integralNumber) &&
        Objects.equals(this._long, jsonNode._long) &&
        Objects.equals(this.missingNode, jsonNode.missingNode) &&
        Objects.equals(this.nodeType, jsonNode.nodeType) &&
        Objects.equals(this._null, jsonNode._null) &&
        Objects.equals(this.number, jsonNode.number) &&
        Objects.equals(this._object, jsonNode._object) &&
        Objects.equals(this.pojo, jsonNode.pojo) &&
        Objects.equals(this._short, jsonNode._short) &&
        Objects.equals(this.textual, jsonNode.textual) &&
        Objects.equals(this.valueNode, jsonNode.valueNode);
  }

  @Override
  public int hashCode() {
    return Objects.hash(array, bigDecimal, bigInteger, binary, _boolean, containerNode, _double, empty, _float, floatingPointNumber, _int, integralNumber, _long, missingNode, nodeType, _null, number, _object, pojo, _short, textual, valueNode);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class JsonNode {\n");
    sb.append("    array: ").append(toIndentedString(array)).append("\n");
    sb.append("    bigDecimal: ").append(toIndentedString(bigDecimal)).append("\n");
    sb.append("    bigInteger: ").append(toIndentedString(bigInteger)).append("\n");
    sb.append("    binary: ").append(toIndentedString(binary)).append("\n");
    sb.append("    _boolean: ").append(toIndentedString(_boolean)).append("\n");
    sb.append("    containerNode: ").append(toIndentedString(containerNode)).append("\n");
    sb.append("    _double: ").append(toIndentedString(_double)).append("\n");
    sb.append("    empty: ").append(toIndentedString(empty)).append("\n");
    sb.append("    _float: ").append(toIndentedString(_float)).append("\n");
    sb.append("    floatingPointNumber: ").append(toIndentedString(floatingPointNumber)).append("\n");
    sb.append("    _int: ").append(toIndentedString(_int)).append("\n");
    sb.append("    integralNumber: ").append(toIndentedString(integralNumber)).append("\n");
    sb.append("    _long: ").append(toIndentedString(_long)).append("\n");
    sb.append("    missingNode: ").append(toIndentedString(missingNode)).append("\n");
    sb.append("    nodeType: ").append(toIndentedString(nodeType)).append("\n");
    sb.append("    _null: ").append(toIndentedString(_null)).append("\n");
    sb.append("    number: ").append(toIndentedString(number)).append("\n");
    sb.append("    _object: ").append(toIndentedString(_object)).append("\n");
    sb.append("    pojo: ").append(toIndentedString(pojo)).append("\n");
    sb.append("    _short: ").append(toIndentedString(_short)).append("\n");
    sb.append("    textual: ").append(toIndentedString(textual)).append("\n");
    sb.append("    valueNode: ").append(toIndentedString(valueNode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

