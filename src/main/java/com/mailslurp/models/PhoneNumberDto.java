/*
 * MailSlurp API
 * MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It's designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
 *
 * The version of the OpenAPI document: 6.5.2
 * Contact: contact@mailslurp.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.mailslurp.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.UUID;

/**
 * PhoneNumberDto
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-07-03T22:39:52.802Z[GMT]")
public class PhoneNumberDto {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private UUID id;

  public static final String SERIALIZED_NAME_USER_ID = "userId";
  @SerializedName(SERIALIZED_NAME_USER_ID)
  private UUID userId;

  public static final String SERIALIZED_NAME_COMPLIANCE_ADDRESS = "complianceAddress";
  @SerializedName(SERIALIZED_NAME_COMPLIANCE_ADDRESS)
  private UUID complianceAddress;

  public static final String SERIALIZED_NAME_EMERGENCY_ADDRESS = "emergencyAddress";
  @SerializedName(SERIALIZED_NAME_EMERGENCY_ADDRESS)
  private UUID emergencyAddress;

  public static final String SERIALIZED_NAME_PHONE_NUMBER = "phoneNumber";
  @SerializedName(SERIALIZED_NAME_PHONE_NUMBER)
  private String phoneNumber;

  /**
   * Gets or Sets phoneCountry
   */
  @JsonAdapter(PhoneCountryEnum.Adapter.class)
  public enum PhoneCountryEnum {
    US("US"),
    
    GB("GB");

    private String value;

    PhoneCountryEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static PhoneCountryEnum fromValue(String value) {
      for (PhoneCountryEnum b : PhoneCountryEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<PhoneCountryEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final PhoneCountryEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public PhoneCountryEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return PhoneCountryEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_PHONE_COUNTRY = "phoneCountry";
  @SerializedName(SERIALIZED_NAME_PHONE_COUNTRY)
  private PhoneCountryEnum phoneCountry;

  public static final String SERIALIZED_NAME_PHONE_PLAN = "phonePlan";
  @SerializedName(SERIALIZED_NAME_PHONE_PLAN)
  private UUID phonePlan;

  public static final String SERIALIZED_NAME_CREATED_AT = "createdAt";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private OffsetDateTime createdAt;

  public static final String SERIALIZED_NAME_UPDATED_AT = "updatedAt";
  @SerializedName(SERIALIZED_NAME_UPDATED_AT)
  private OffsetDateTime updatedAt;


  public PhoneNumberDto id(UUID id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(required = true, value = "")

  public UUID getId() {
    return id;
  }


  public void setId(UUID id) {
    this.id = id;
  }


  public PhoneNumberDto userId(UUID userId) {
    
    this.userId = userId;
    return this;
  }

   /**
   * Get userId
   * @return userId
  **/
  @ApiModelProperty(required = true, value = "")

  public UUID getUserId() {
    return userId;
  }


  public void setUserId(UUID userId) {
    this.userId = userId;
  }


  public PhoneNumberDto complianceAddress(UUID complianceAddress) {
    
    this.complianceAddress = complianceAddress;
    return this;
  }

   /**
   * Get complianceAddress
   * @return complianceAddress
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public UUID getComplianceAddress() {
    return complianceAddress;
  }


  public void setComplianceAddress(UUID complianceAddress) {
    this.complianceAddress = complianceAddress;
  }


  public PhoneNumberDto emergencyAddress(UUID emergencyAddress) {
    
    this.emergencyAddress = emergencyAddress;
    return this;
  }

   /**
   * Get emergencyAddress
   * @return emergencyAddress
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public UUID getEmergencyAddress() {
    return emergencyAddress;
  }


  public void setEmergencyAddress(UUID emergencyAddress) {
    this.emergencyAddress = emergencyAddress;
  }


  public PhoneNumberDto phoneNumber(String phoneNumber) {
    
    this.phoneNumber = phoneNumber;
    return this;
  }

   /**
   * Get phoneNumber
   * @return phoneNumber
  **/
  @ApiModelProperty(required = true, value = "")

  public String getPhoneNumber() {
    return phoneNumber;
  }


  public void setPhoneNumber(String phoneNumber) {
    this.phoneNumber = phoneNumber;
  }


  public PhoneNumberDto phoneCountry(PhoneCountryEnum phoneCountry) {
    
    this.phoneCountry = phoneCountry;
    return this;
  }

   /**
   * Get phoneCountry
   * @return phoneCountry
  **/
  @ApiModelProperty(required = true, value = "")

  public PhoneCountryEnum getPhoneCountry() {
    return phoneCountry;
  }


  public void setPhoneCountry(PhoneCountryEnum phoneCountry) {
    this.phoneCountry = phoneCountry;
  }


  public PhoneNumberDto phonePlan(UUID phonePlan) {
    
    this.phonePlan = phonePlan;
    return this;
  }

   /**
   * Get phonePlan
   * @return phonePlan
  **/
  @ApiModelProperty(required = true, value = "")

  public UUID getPhonePlan() {
    return phonePlan;
  }


  public void setPhonePlan(UUID phonePlan) {
    this.phonePlan = phonePlan;
  }


  public PhoneNumberDto createdAt(OffsetDateTime createdAt) {
    
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Get createdAt
   * @return createdAt
  **/
  @ApiModelProperty(required = true, value = "")

  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }


  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }


  public PhoneNumberDto updatedAt(OffsetDateTime updatedAt) {
    
    this.updatedAt = updatedAt;
    return this;
  }

   /**
   * Get updatedAt
   * @return updatedAt
  **/
  @ApiModelProperty(required = true, value = "")

  public OffsetDateTime getUpdatedAt() {
    return updatedAt;
  }


  public void setUpdatedAt(OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PhoneNumberDto phoneNumberDto = (PhoneNumberDto) o;
    return Objects.equals(this.id, phoneNumberDto.id) &&
        Objects.equals(this.userId, phoneNumberDto.userId) &&
        Objects.equals(this.complianceAddress, phoneNumberDto.complianceAddress) &&
        Objects.equals(this.emergencyAddress, phoneNumberDto.emergencyAddress) &&
        Objects.equals(this.phoneNumber, phoneNumberDto.phoneNumber) &&
        Objects.equals(this.phoneCountry, phoneNumberDto.phoneCountry) &&
        Objects.equals(this.phonePlan, phoneNumberDto.phonePlan) &&
        Objects.equals(this.createdAt, phoneNumberDto.createdAt) &&
        Objects.equals(this.updatedAt, phoneNumberDto.updatedAt);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, userId, complianceAddress, emergencyAddress, phoneNumber, phoneCountry, phonePlan, createdAt, updatedAt);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PhoneNumberDto {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    complianceAddress: ").append(toIndentedString(complianceAddress)).append("\n");
    sb.append("    emergencyAddress: ").append(toIndentedString(emergencyAddress)).append("\n");
    sb.append("    phoneNumber: ").append(toIndentedString(phoneNumber)).append("\n");
    sb.append("    phoneCountry: ").append(toIndentedString(phoneCountry)).append("\n");
    sb.append("    phonePlan: ").append(toIndentedString(phonePlan)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

