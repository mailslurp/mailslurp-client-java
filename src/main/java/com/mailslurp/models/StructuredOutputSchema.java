/*
 * MailSlurp API
 * MailSlurp is an API for sending and receiving emails and SMS from dynamically allocated email addresses and phone numbers. It's designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
 *
 * The version of the OpenAPI document: 6.5.2
 * Contact: contact@mailslurp.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.mailslurp.models;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.mailslurp.clients.JSON;

/**
 * JSON output schema for structured content repsonses. This schema dictates the format that an AI should use when responding to your instructions.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-07-30T22:25:17.446308831Z[Etc/UTC]", comments = "Generator version: 7.13.0")
public class StructuredOutputSchema {
  public static final String SERIALIZED_NAME_ANY_OF = "anyOf";
  @SerializedName(SERIALIZED_NAME_ANY_OF)
  @javax.annotation.Nullable
  private List<StructuredOutputSchema> anyOf;

  public static final String SERIALIZED_NAME_DEFAULT = "default";
  @SerializedName(SERIALIZED_NAME_DEFAULT)
  @javax.annotation.Nullable
  private Object _default;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  @javax.annotation.Nullable
  private String description;

  public static final String SERIALIZED_NAME_ENUM_VALUES = "enumValues";
  @SerializedName(SERIALIZED_NAME_ENUM_VALUES)
  @javax.annotation.Nullable
  private List<String> enumValues;

  public static final String SERIALIZED_NAME_EXAMPLE = "example";
  @SerializedName(SERIALIZED_NAME_EXAMPLE)
  @javax.annotation.Nullable
  private Object example;

  public static final String SERIALIZED_NAME_FORMAT = "format";
  @SerializedName(SERIALIZED_NAME_FORMAT)
  @javax.annotation.Nullable
  private String format;

  public static final String SERIALIZED_NAME_ITEMS = "items";
  @SerializedName(SERIALIZED_NAME_ITEMS)
  @javax.annotation.Nullable
  private StructuredOutputSchema items;

  public static final String SERIALIZED_NAME_MAX_ITEMS = "maxItems";
  @SerializedName(SERIALIZED_NAME_MAX_ITEMS)
  @javax.annotation.Nullable
  private Long maxItems;

  public static final String SERIALIZED_NAME_MIN_ITEMS = "minItems";
  @SerializedName(SERIALIZED_NAME_MIN_ITEMS)
  @javax.annotation.Nullable
  private Long minItems;

  public static final String SERIALIZED_NAME_MAX_LENGTH = "maxLength";
  @SerializedName(SERIALIZED_NAME_MAX_LENGTH)
  @javax.annotation.Nullable
  private Long maxLength;

  public static final String SERIALIZED_NAME_MIN_LENGTH = "minLength";
  @SerializedName(SERIALIZED_NAME_MIN_LENGTH)
  @javax.annotation.Nullable
  private Long minLength;

  public static final String SERIALIZED_NAME_PATTERN = "pattern";
  @SerializedName(SERIALIZED_NAME_PATTERN)
  @javax.annotation.Nullable
  private String pattern;

  public static final String SERIALIZED_NAME_PROPERTIES = "properties";
  @SerializedName(SERIALIZED_NAME_PROPERTIES)
  @javax.annotation.Nullable
  private Map<String, StructuredOutputSchema> properties;

  public static final String SERIALIZED_NAME_PROPERTY_ORDERING = "propertyOrdering";
  @SerializedName(SERIALIZED_NAME_PROPERTY_ORDERING)
  @javax.annotation.Nullable
  private List<String> propertyOrdering;

  public static final String SERIALIZED_NAME_REQUIRED = "required";
  @SerializedName(SERIALIZED_NAME_REQUIRED)
  @javax.annotation.Nullable
  private List<String> required;

  public static final String SERIALIZED_NAME_MAX_PROPERTIES = "maxProperties";
  @SerializedName(SERIALIZED_NAME_MAX_PROPERTIES)
  @javax.annotation.Nullable
  private Long maxProperties;

  public static final String SERIALIZED_NAME_MIN_PROPERTIES = "minProperties";
  @SerializedName(SERIALIZED_NAME_MIN_PROPERTIES)
  @javax.annotation.Nullable
  private Long minProperties;

  public static final String SERIALIZED_NAME_MAXIMUM = "maximum";
  @SerializedName(SERIALIZED_NAME_MAXIMUM)
  @javax.annotation.Nullable
  private BigDecimal maximum;

  public static final String SERIALIZED_NAME_MINIMUM = "minimum";
  @SerializedName(SERIALIZED_NAME_MINIMUM)
  @javax.annotation.Nullable
  private BigDecimal minimum;

  public static final String SERIALIZED_NAME_NULLABLE = "nullable";
  @SerializedName(SERIALIZED_NAME_NULLABLE)
  @javax.annotation.Nullable
  private Boolean nullable;

  public static final String SERIALIZED_NAME_TITLE = "title";
  @SerializedName(SERIALIZED_NAME_TITLE)
  @javax.annotation.Nullable
  private String title;

  /**
   * Primitive JSON schema types with a fallback CUSTOM for unknown values.
   */
  @JsonAdapter(TypeEnum.Adapter.class)
  public enum TypeEnum {
    STRING("string"),
    
    NUMBER("number"),
    
    INTEGER("integer"),
    
    BOOLEAN("boolean"),
    
    OBJECT("object"),
    
    ARRAY("array"),
    
    NULL("null");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return TypeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException { if (true) { return; }
      String value = jsonElement.getAsString();
      TypeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  @javax.annotation.Nullable
  private TypeEnum type;

  public StructuredOutputSchema() {
  }

  public StructuredOutputSchema anyOf(@javax.annotation.Nullable List<StructuredOutputSchema> anyOf) {
    this.anyOf = anyOf;
    return this;
  }

  public StructuredOutputSchema addAnyOfItem(StructuredOutputSchema anyOfItem) {
    if (this.anyOf == null) {
      this.anyOf = new ArrayList<>();
    }
    this.anyOf.add(anyOfItem);
    return this;
  }

  /**
   * Get anyOf
   * @return anyOf
   */
  @javax.annotation.Nullable
  public List<StructuredOutputSchema> getAnyOf() {
    return anyOf;
  }

  public void setAnyOf(@javax.annotation.Nullable List<StructuredOutputSchema> anyOf) {
    this.anyOf = anyOf;
  }


  public StructuredOutputSchema _default(@javax.annotation.Nullable Object _default) {
    this._default = _default;
    return this;
  }

  /**
   * Get _default
   * @return _default
   */
  @javax.annotation.Nullable
  public Object getDefault() {
    return _default;
  }

  public void setDefault(@javax.annotation.Nullable Object _default) {
    this._default = _default;
  }


  public StructuredOutputSchema description(@javax.annotation.Nullable String description) {
    this.description = description;
    return this;
  }

  /**
   * Provide a description of the schema to help the AI understand the schema.
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(@javax.annotation.Nullable String description) {
    this.description = description;
  }


  public StructuredOutputSchema enumValues(@javax.annotation.Nullable List<String> enumValues) {
    this.enumValues = enumValues;
    return this;
  }

  public StructuredOutputSchema addEnumValuesItem(String enumValuesItem) {
    if (this.enumValues == null) {
      this.enumValues = new ArrayList<>();
    }
    this.enumValues.add(enumValuesItem);
    return this;
  }

  /**
   * When using type string and format enum pass a collection of enum values here.
   * @return enumValues
   */
  @javax.annotation.Nullable
  public List<String> getEnumValues() {
    return enumValues;
  }

  public void setEnumValues(@javax.annotation.Nullable List<String> enumValues) {
    this.enumValues = enumValues;
  }


  public StructuredOutputSchema example(@javax.annotation.Nullable Object example) {
    this.example = example;
    return this;
  }

  /**
   * Get example
   * @return example
   */
  @javax.annotation.Nullable
  public Object getExample() {
    return example;
  }

  public void setExample(@javax.annotation.Nullable Object example) {
    this.example = example;
  }


  public StructuredOutputSchema format(@javax.annotation.Nullable String format) {
    this.format = format;
    return this;
  }

  /**
   * Format for string types. Can be null, date-time or enum.
   * @return format
   */
  @javax.annotation.Nullable
  public String getFormat() {
    return format;
  }

  public void setFormat(@javax.annotation.Nullable String format) {
    this.format = format;
  }


  public StructuredOutputSchema items(@javax.annotation.Nullable StructuredOutputSchema items) {
    this.items = items;
    return this;
  }

  /**
   * Get items
   * @return items
   */
  @javax.annotation.Nullable
  public StructuredOutputSchema getItems() {
    return items;
  }

  public void setItems(@javax.annotation.Nullable StructuredOutputSchema items) {
    this.items = items;
  }


  public StructuredOutputSchema maxItems(@javax.annotation.Nullable Long maxItems) {
    this.maxItems = maxItems;
    return this;
  }

  /**
   * Get maxItems
   * minimum: 0
   * @return maxItems
   */
  @javax.annotation.Nullable
  public Long getMaxItems() {
    return maxItems;
  }

  public void setMaxItems(@javax.annotation.Nullable Long maxItems) {
    this.maxItems = maxItems;
  }


  public StructuredOutputSchema minItems(@javax.annotation.Nullable Long minItems) {
    this.minItems = minItems;
    return this;
  }

  /**
   * Get minItems
   * minimum: 0
   * @return minItems
   */
  @javax.annotation.Nullable
  public Long getMinItems() {
    return minItems;
  }

  public void setMinItems(@javax.annotation.Nullable Long minItems) {
    this.minItems = minItems;
  }


  public StructuredOutputSchema maxLength(@javax.annotation.Nullable Long maxLength) {
    this.maxLength = maxLength;
    return this;
  }

  /**
   * Get maxLength
   * minimum: 0
   * @return maxLength
   */
  @javax.annotation.Nullable
  public Long getMaxLength() {
    return maxLength;
  }

  public void setMaxLength(@javax.annotation.Nullable Long maxLength) {
    this.maxLength = maxLength;
  }


  public StructuredOutputSchema minLength(@javax.annotation.Nullable Long minLength) {
    this.minLength = minLength;
    return this;
  }

  /**
   * Get minLength
   * minimum: 0
   * @return minLength
   */
  @javax.annotation.Nullable
  public Long getMinLength() {
    return minLength;
  }

  public void setMinLength(@javax.annotation.Nullable Long minLength) {
    this.minLength = minLength;
  }


  public StructuredOutputSchema pattern(@javax.annotation.Nullable String pattern) {
    this.pattern = pattern;
    return this;
  }

  /**
   * Regex pattern for STRING type
   * @return pattern
   */
  @javax.annotation.Nullable
  public String getPattern() {
    return pattern;
  }

  public void setPattern(@javax.annotation.Nullable String pattern) {
    this.pattern = pattern;
  }


  public StructuredOutputSchema properties(@javax.annotation.Nullable Map<String, StructuredOutputSchema> properties) {
    this.properties = properties;
    return this;
  }

  public StructuredOutputSchema putPropertiesItem(String key, StructuredOutputSchema propertiesItem) {
    if (this.properties == null) {
      this.properties = new HashMap<>();
    }
    this.properties.put(key, propertiesItem);
    return this;
  }

  /**
   * Properties of an OBJECT schema. These are key value pairs where the key is the property name and the value is the schema for that property.
   * @return properties
   */
  @javax.annotation.Nullable
  public Map<String, StructuredOutputSchema> getProperties() {
    return properties;
  }

  public void setProperties(@javax.annotation.Nullable Map<String, StructuredOutputSchema> properties) {
    this.properties = properties;
  }


  public StructuredOutputSchema propertyOrdering(@javax.annotation.Nullable List<String> propertyOrdering) {
    this.propertyOrdering = propertyOrdering;
    return this;
  }

  public StructuredOutputSchema addPropertyOrderingItem(String propertyOrderingItem) {
    if (this.propertyOrdering == null) {
      this.propertyOrdering = new ArrayList<>();
    }
    this.propertyOrdering.add(propertyOrderingItem);
    return this;
  }

  /**
   * Pass an array of property names to specify the order of properties in the generated JSON object if required.
   * @return propertyOrdering
   */
  @javax.annotation.Nullable
  public List<String> getPropertyOrdering() {
    return propertyOrdering;
  }

  public void setPropertyOrdering(@javax.annotation.Nullable List<String> propertyOrdering) {
    this.propertyOrdering = propertyOrdering;
  }


  public StructuredOutputSchema required(@javax.annotation.Nullable List<String> required) {
    this.required = required;
    return this;
  }

  public StructuredOutputSchema addRequiredItem(String requiredItem) {
    if (this.required == null) {
      this.required = new ArrayList<>();
    }
    this.required.add(requiredItem);
    return this;
  }

  /**
   * Is field required
   * @return required
   */
  @javax.annotation.Nullable
  public List<String> getRequired() {
    return required;
  }

  public void setRequired(@javax.annotation.Nullable List<String> required) {
    this.required = required;
  }


  public StructuredOutputSchema maxProperties(@javax.annotation.Nullable Long maxProperties) {
    this.maxProperties = maxProperties;
    return this;
  }

  /**
   * Get maxProperties
   * minimum: 0
   * @return maxProperties
   */
  @javax.annotation.Nullable
  public Long getMaxProperties() {
    return maxProperties;
  }

  public void setMaxProperties(@javax.annotation.Nullable Long maxProperties) {
    this.maxProperties = maxProperties;
  }


  public StructuredOutputSchema minProperties(@javax.annotation.Nullable Long minProperties) {
    this.minProperties = minProperties;
    return this;
  }

  /**
   * Get minProperties
   * minimum: 0
   * @return minProperties
   */
  @javax.annotation.Nullable
  public Long getMinProperties() {
    return minProperties;
  }

  public void setMinProperties(@javax.annotation.Nullable Long minProperties) {
    this.minProperties = minProperties;
  }


  public StructuredOutputSchema maximum(@javax.annotation.Nullable BigDecimal maximum) {
    this.maximum = maximum;
    return this;
  }

  /**
   * Get maximum
   * @return maximum
   */
  @javax.annotation.Nullable
  public BigDecimal getMaximum() {
    return maximum;
  }

  public void setMaximum(@javax.annotation.Nullable BigDecimal maximum) {
    this.maximum = maximum;
  }


  public StructuredOutputSchema minimum(@javax.annotation.Nullable BigDecimal minimum) {
    this.minimum = minimum;
    return this;
  }

  /**
   * Get minimum
   * @return minimum
   */
  @javax.annotation.Nullable
  public BigDecimal getMinimum() {
    return minimum;
  }

  public void setMinimum(@javax.annotation.Nullable BigDecimal minimum) {
    this.minimum = minimum;
  }


  public StructuredOutputSchema nullable(@javax.annotation.Nullable Boolean nullable) {
    this.nullable = nullable;
    return this;
  }

  /**
   * Get nullable
   * @return nullable
   */
  @javax.annotation.Nullable
  public Boolean getNullable() {
    return nullable;
  }

  public void setNullable(@javax.annotation.Nullable Boolean nullable) {
    this.nullable = nullable;
  }


  public StructuredOutputSchema title(@javax.annotation.Nullable String title) {
    this.title = title;
    return this;
  }

  /**
   * Get title
   * @return title
   */
  @javax.annotation.Nullable
  public String getTitle() {
    return title;
  }

  public void setTitle(@javax.annotation.Nullable String title) {
    this.title = title;
  }


  public StructuredOutputSchema type(@javax.annotation.Nullable TypeEnum type) {
    this.type = type;
    return this;
  }

  /**
   * Primitive JSON schema types with a fallback CUSTOM for unknown values.
   * @return type
   */
  @javax.annotation.Nullable
  public TypeEnum getType() {
    return type;
  }

  public void setType(@javax.annotation.Nullable TypeEnum type) {
    this.type = type;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StructuredOutputSchema structuredOutputSchema = (StructuredOutputSchema) o;
    return Objects.equals(this.anyOf, structuredOutputSchema.anyOf) &&
        Objects.equals(this._default, structuredOutputSchema._default) &&
        Objects.equals(this.description, structuredOutputSchema.description) &&
        Objects.equals(this.enumValues, structuredOutputSchema.enumValues) &&
        Objects.equals(this.example, structuredOutputSchema.example) &&
        Objects.equals(this.format, structuredOutputSchema.format) &&
        Objects.equals(this.items, structuredOutputSchema.items) &&
        Objects.equals(this.maxItems, structuredOutputSchema.maxItems) &&
        Objects.equals(this.minItems, structuredOutputSchema.minItems) &&
        Objects.equals(this.maxLength, structuredOutputSchema.maxLength) &&
        Objects.equals(this.minLength, structuredOutputSchema.minLength) &&
        Objects.equals(this.pattern, structuredOutputSchema.pattern) &&
        Objects.equals(this.properties, structuredOutputSchema.properties) &&
        Objects.equals(this.propertyOrdering, structuredOutputSchema.propertyOrdering) &&
        Objects.equals(this.required, structuredOutputSchema.required) &&
        Objects.equals(this.maxProperties, structuredOutputSchema.maxProperties) &&
        Objects.equals(this.minProperties, structuredOutputSchema.minProperties) &&
        Objects.equals(this.maximum, structuredOutputSchema.maximum) &&
        Objects.equals(this.minimum, structuredOutputSchema.minimum) &&
        Objects.equals(this.nullable, structuredOutputSchema.nullable) &&
        Objects.equals(this.title, structuredOutputSchema.title) &&
        Objects.equals(this.type, structuredOutputSchema.type);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(anyOf, _default, description, enumValues, example, format, items, maxItems, minItems, maxLength, minLength, pattern, properties, propertyOrdering, required, maxProperties, minProperties, maximum, minimum, nullable, title, type);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StructuredOutputSchema {\n");
    sb.append("    anyOf: ").append(toIndentedString(anyOf)).append("\n");
    sb.append("    _default: ").append(toIndentedString(_default)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    enumValues: ").append(toIndentedString(enumValues)).append("\n");
    sb.append("    example: ").append(toIndentedString(example)).append("\n");
    sb.append("    format: ").append(toIndentedString(format)).append("\n");
    sb.append("    items: ").append(toIndentedString(items)).append("\n");
    sb.append("    maxItems: ").append(toIndentedString(maxItems)).append("\n");
    sb.append("    minItems: ").append(toIndentedString(minItems)).append("\n");
    sb.append("    maxLength: ").append(toIndentedString(maxLength)).append("\n");
    sb.append("    minLength: ").append(toIndentedString(minLength)).append("\n");
    sb.append("    pattern: ").append(toIndentedString(pattern)).append("\n");
    sb.append("    properties: ").append(toIndentedString(properties)).append("\n");
    sb.append("    propertyOrdering: ").append(toIndentedString(propertyOrdering)).append("\n");
    sb.append("    required: ").append(toIndentedString(required)).append("\n");
    sb.append("    maxProperties: ").append(toIndentedString(maxProperties)).append("\n");
    sb.append("    minProperties: ").append(toIndentedString(minProperties)).append("\n");
    sb.append("    maximum: ").append(toIndentedString(maximum)).append("\n");
    sb.append("    minimum: ").append(toIndentedString(minimum)).append("\n");
    sb.append("    nullable: ").append(toIndentedString(nullable)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("anyOf");
    openapiFields.add("default");
    openapiFields.add("description");
    openapiFields.add("enumValues");
    openapiFields.add("example");
    openapiFields.add("format");
    openapiFields.add("items");
    openapiFields.add("maxItems");
    openapiFields.add("minItems");
    openapiFields.add("maxLength");
    openapiFields.add("minLength");
    openapiFields.add("pattern");
    openapiFields.add("properties");
    openapiFields.add("propertyOrdering");
    openapiFields.add("required");
    openapiFields.add("maxProperties");
    openapiFields.add("minProperties");
    openapiFields.add("maximum");
    openapiFields.add("minimum");
    openapiFields.add("nullable");
    openapiFields.add("title");
    openapiFields.add("type");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to StructuredOutputSchema
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException { if (true) { return; }
      if (jsonElement == null) {
        if (!StructuredOutputSchema.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in StructuredOutputSchema is not found in the empty JSON string", StructuredOutputSchema.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!StructuredOutputSchema.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `StructuredOutputSchema` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (jsonObj.get("anyOf") != null && !jsonObj.get("anyOf").isJsonNull()) {
        JsonArray jsonArrayanyOf = jsonObj.getAsJsonArray("anyOf");
        if (jsonArrayanyOf != null) {
          // ensure the json data is an array
          if (!jsonObj.get("anyOf").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `anyOf` to be an array in the JSON string but got `%s`", jsonObj.get("anyOf").toString()));
          }

          // validate the optional field `anyOf` (array)
          for (int i = 0; i < jsonArrayanyOf.size(); i++) {
            StructuredOutputSchema.validateJsonElement(jsonArrayanyOf.get(i));
          };
        }
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("enumValues") != null && !jsonObj.get("enumValues").isJsonNull() && !jsonObj.get("enumValues").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `enumValues` to be an array in the JSON string but got `%s`", jsonObj.get("enumValues").toString()));
      }
      if ((jsonObj.get("format") != null && !jsonObj.get("format").isJsonNull()) && !jsonObj.get("format").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `format` to be a primitive type in the JSON string but got `%s`", jsonObj.get("format").toString()));
      }
      // validate the optional field `items`
      if (jsonObj.get("items") != null && !jsonObj.get("items").isJsonNull()) {
        StructuredOutputSchema.validateJsonElement(jsonObj.get("items"));
      }
      if ((jsonObj.get("pattern") != null && !jsonObj.get("pattern").isJsonNull()) && !jsonObj.get("pattern").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pattern` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pattern").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("propertyOrdering") != null && !jsonObj.get("propertyOrdering").isJsonNull() && !jsonObj.get("propertyOrdering").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `propertyOrdering` to be an array in the JSON string but got `%s`", jsonObj.get("propertyOrdering").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("required") != null && !jsonObj.get("required").isJsonNull() && !jsonObj.get("required").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `required` to be an array in the JSON string but got `%s`", jsonObj.get("required").toString()));
      }
      if ((jsonObj.get("title") != null && !jsonObj.get("title").isJsonNull()) && !jsonObj.get("title").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `title` to be a primitive type in the JSON string but got `%s`", jsonObj.get("title").toString()));
      }
      if ((jsonObj.get("type") != null && !jsonObj.get("type").isJsonNull()) && !jsonObj.get("type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("type").toString()));
      }
      // validate the optional field `type`
      if (jsonObj.get("type") != null && !jsonObj.get("type").isJsonNull()) {
        TypeEnum.validateJsonElement(jsonObj.get("type"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!StructuredOutputSchema.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'StructuredOutputSchema' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<StructuredOutputSchema> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(StructuredOutputSchema.class));

       return (TypeAdapter<T>) new TypeAdapter<StructuredOutputSchema>() {
           @Override
           public void write(JsonWriter out, StructuredOutputSchema value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public StructuredOutputSchema read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of StructuredOutputSchema given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of StructuredOutputSchema
   * @throws IOException if the JSON string is invalid with respect to StructuredOutputSchema
   */
  public static StructuredOutputSchema fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, StructuredOutputSchema.class);
  }

  /**
   * Convert an instance of StructuredOutputSchema to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

