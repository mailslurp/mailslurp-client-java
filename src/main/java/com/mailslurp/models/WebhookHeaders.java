/*
 * MailSlurp API
 * MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It's designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
 *
 * The version of the OpenAPI document: 6.5.2
 * Contact: contact@mailslurp.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.mailslurp.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.mailslurp.models.WebhookHeaderNameValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * Webhook HTTP headers to include with each request from MailSlurp to your server
 */
@ApiModel(description = "Webhook HTTP headers to include with each request from MailSlurp to your server")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-02-18T04:02:23.419Z[GMT]")
public class WebhookHeaders {
  public static final String SERIALIZED_NAME_HEADERS = "headers";
  @SerializedName(SERIALIZED_NAME_HEADERS)
  private List<WebhookHeaderNameValue> headers = new ArrayList<>();


  public WebhookHeaders headers(List<WebhookHeaderNameValue> headers) {
    
    this.headers = headers;
    return this;
  }

  public WebhookHeaders addHeadersItem(WebhookHeaderNameValue headersItem) {
    this.headers.add(headersItem);
    return this;
  }

   /**
   * List of header name value pairs to include with webhook requests
   * @return headers
  **/
  @ApiModelProperty(required = true, value = "List of header name value pairs to include with webhook requests")

  public List<WebhookHeaderNameValue> getHeaders() {
    return headers;
  }


  public void setHeaders(List<WebhookHeaderNameValue> headers) {
    this.headers = headers;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WebhookHeaders webhookHeaders = (WebhookHeaders) o;
    return Objects.equals(this.headers, webhookHeaders.headers);
  }

  @Override
  public int hashCode() {
    return Objects.hash(headers);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WebhookHeaders {\n");
    sb.append("    headers: ").append(toIndentedString(headers)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

