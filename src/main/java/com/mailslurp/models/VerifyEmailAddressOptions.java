/*
 * MailSlurp API
 * MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It's designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.   ## Resources - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://www.mailslurp.com/docs/) - [Examples](https://github.com/mailslurp/examples) repository 
 *
 * The version of the OpenAPI document: 6.5.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.mailslurp.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Options for verifying that an email address exists at a remote mail server.
 */
@ApiModel(description = "Options for verifying that an email address exists at a remote mail server.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-03-02T09:58:57.100Z[GMT]")
public class VerifyEmailAddressOptions {
  public static final String SERIALIZED_NAME_MAIL_SERVER_DOMAIN = "mailServerDomain";
  @SerializedName(SERIALIZED_NAME_MAIL_SERVER_DOMAIN)
  private String mailServerDomain;

  public static final String SERIALIZED_NAME_EMAIL_ADDRESS = "emailAddress";
  @SerializedName(SERIALIZED_NAME_EMAIL_ADDRESS)
  private String emailAddress;

  public static final String SERIALIZED_NAME_SENDER_EMAIL_ADDRESS = "senderEmailAddress";
  @SerializedName(SERIALIZED_NAME_SENDER_EMAIL_ADDRESS)
  private String senderEmailAddress;

  public static final String SERIALIZED_NAME_PORT = "port";
  @SerializedName(SERIALIZED_NAME_PORT)
  private Integer port;


  public VerifyEmailAddressOptions mailServerDomain(String mailServerDomain) {
    
    this.mailServerDomain = mailServerDomain;
    return this;
  }

   /**
   * Get mailServerDomain
   * @return mailServerDomain
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getMailServerDomain() {
    return mailServerDomain;
  }


  public void setMailServerDomain(String mailServerDomain) {
    this.mailServerDomain = mailServerDomain;
  }


  public VerifyEmailAddressOptions emailAddress(String emailAddress) {
    
    this.emailAddress = emailAddress;
    return this;
  }

   /**
   * Get emailAddress
   * @return emailAddress
  **/
  @ApiModelProperty(required = true, value = "")

  public String getEmailAddress() {
    return emailAddress;
  }


  public void setEmailAddress(String emailAddress) {
    this.emailAddress = emailAddress;
  }


  public VerifyEmailAddressOptions senderEmailAddress(String senderEmailAddress) {
    
    this.senderEmailAddress = senderEmailAddress;
    return this;
  }

   /**
   * Get senderEmailAddress
   * @return senderEmailAddress
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSenderEmailAddress() {
    return senderEmailAddress;
  }


  public void setSenderEmailAddress(String senderEmailAddress) {
    this.senderEmailAddress = senderEmailAddress;
  }


  public VerifyEmailAddressOptions port(Integer port) {
    
    this.port = port;
    return this;
  }

   /**
   * Get port
   * @return port
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getPort() {
    return port;
  }


  public void setPort(Integer port) {
    this.port = port;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VerifyEmailAddressOptions verifyEmailAddressOptions = (VerifyEmailAddressOptions) o;
    return Objects.equals(this.mailServerDomain, verifyEmailAddressOptions.mailServerDomain) &&
        Objects.equals(this.emailAddress, verifyEmailAddressOptions.emailAddress) &&
        Objects.equals(this.senderEmailAddress, verifyEmailAddressOptions.senderEmailAddress) &&
        Objects.equals(this.port, verifyEmailAddressOptions.port);
  }

  @Override
  public int hashCode() {
    return Objects.hash(mailServerDomain, emailAddress, senderEmailAddress, port);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VerifyEmailAddressOptions {\n");
    sb.append("    mailServerDomain: ").append(toIndentedString(mailServerDomain)).append("\n");
    sb.append("    emailAddress: ").append(toIndentedString(emailAddress)).append("\n");
    sb.append("    senderEmailAddress: ").append(toIndentedString(senderEmailAddress)).append("\n");
    sb.append("    port: ").append(toIndentedString(port)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

