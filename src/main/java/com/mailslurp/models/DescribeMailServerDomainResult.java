/*
 * MailSlurp API
 * MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It's designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.   ## Resources - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://www.mailslurp.com/docs/) - [Examples](https://github.com/mailslurp/examples) repository 
 *
 * The version of the OpenAPI document: 6.5.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.mailslurp.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.mailslurp.models.NameServerRecord;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * Name Server lookup result
 */
@ApiModel(description = "Name Server lookup result")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-01-11T22:10:13.688Z[GMT]")
public class DescribeMailServerDomainResult {
  public static final String SERIALIZED_NAME_DOMAIN = "domain";
  @SerializedName(SERIALIZED_NAME_DOMAIN)
  private String domain;

  public static final String SERIALIZED_NAME_MESSAGE = "message";
  @SerializedName(SERIALIZED_NAME_MESSAGE)
  private String message;

  public static final String SERIALIZED_NAME_MX_RECORDS = "mxRecords";
  @SerializedName(SERIALIZED_NAME_MX_RECORDS)
  private List<NameServerRecord> mxRecords = new ArrayList<>();


  public DescribeMailServerDomainResult domain(String domain) {
    
    this.domain = domain;
    return this;
  }

   /**
   * Get domain
   * @return domain
  **/
  @ApiModelProperty(required = true, value = "")

  public String getDomain() {
    return domain;
  }


  public void setDomain(String domain) {
    this.domain = domain;
  }


  public DescribeMailServerDomainResult message(String message) {
    
    this.message = message;
    return this;
  }

   /**
   * Get message
   * @return message
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getMessage() {
    return message;
  }


  public void setMessage(String message) {
    this.message = message;
  }


  public DescribeMailServerDomainResult mxRecords(List<NameServerRecord> mxRecords) {
    
    this.mxRecords = mxRecords;
    return this;
  }

  public DescribeMailServerDomainResult addMxRecordsItem(NameServerRecord mxRecordsItem) {
    this.mxRecords.add(mxRecordsItem);
    return this;
  }

   /**
   * Get mxRecords
   * @return mxRecords
  **/
  @ApiModelProperty(required = true, value = "")

  public List<NameServerRecord> getMxRecords() {
    return mxRecords;
  }


  public void setMxRecords(List<NameServerRecord> mxRecords) {
    this.mxRecords = mxRecords;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DescribeMailServerDomainResult describeMailServerDomainResult = (DescribeMailServerDomainResult) o;
    return Objects.equals(this.domain, describeMailServerDomainResult.domain) &&
        Objects.equals(this.message, describeMailServerDomainResult.message) &&
        Objects.equals(this.mxRecords, describeMailServerDomainResult.mxRecords);
  }

  @Override
  public int hashCode() {
    return Objects.hash(domain, message, mxRecords);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DescribeMailServerDomainResult {\n");
    sb.append("    domain: ").append(toIndentedString(domain)).append("\n");
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("    mxRecords: ").append(toIndentedString(mxRecords)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

