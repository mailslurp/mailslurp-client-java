/*
 * MailSlurp API
 * MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It's designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
 *
 * The version of the OpenAPI document: 6.5.2
 * Contact: contact@mailslurp.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.mailslurp.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.UUID;

/**
 * ConnectorSyncEventDto
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-06-12T11:42:46.494Z[GMT]")
public class ConnectorSyncEventDto {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private UUID id;

  public static final String SERIALIZED_NAME_CONNECTOR_ID = "connectorId";
  @SerializedName(SERIALIZED_NAME_CONNECTOR_ID)
  private UUID connectorId;

  /**
   * Gets or Sets syncStatus
   */
  @JsonAdapter(SyncStatusEnum.Adapter.class)
  public enum SyncStatusEnum {
    SUCCESS("SUCCESS"),
    
    INTERNAL_ERROR("INTERNAL_ERROR"),
    
    SUBSCRIPTION_ERROR("SUBSCRIPTION_ERROR"),
    
    CONNECTION_ERROR("CONNECTION_ERROR"),
    
    NOT_FOUND("NOT_FOUND");

    private String value;

    SyncStatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static SyncStatusEnum fromValue(String value) {
      for (SyncStatusEnum b : SyncStatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<SyncStatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final SyncStatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public SyncStatusEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return SyncStatusEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_SYNC_STATUS = "syncStatus";
  @SerializedName(SERIALIZED_NAME_SYNC_STATUS)
  private SyncStatusEnum syncStatus;

  public static final String SERIALIZED_NAME_SYNC_COUNT = "syncCount";
  @SerializedName(SERIALIZED_NAME_SYNC_COUNT)
  private Long syncCount;

  public static final String SERIALIZED_NAME_MESSAGE = "message";
  @SerializedName(SERIALIZED_NAME_MESSAGE)
  private String message;

  public static final String SERIALIZED_NAME_CREATED_AT = "createdAt";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private OffsetDateTime createdAt;


  public ConnectorSyncEventDto id(UUID id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(required = true, value = "")

  public UUID getId() {
    return id;
  }


  public void setId(UUID id) {
    this.id = id;
  }


  public ConnectorSyncEventDto connectorId(UUID connectorId) {
    
    this.connectorId = connectorId;
    return this;
  }

   /**
   * Get connectorId
   * @return connectorId
  **/
  @ApiModelProperty(required = true, value = "")

  public UUID getConnectorId() {
    return connectorId;
  }


  public void setConnectorId(UUID connectorId) {
    this.connectorId = connectorId;
  }


  public ConnectorSyncEventDto syncStatus(SyncStatusEnum syncStatus) {
    
    this.syncStatus = syncStatus;
    return this;
  }

   /**
   * Get syncStatus
   * @return syncStatus
  **/
  @ApiModelProperty(required = true, value = "")

  public SyncStatusEnum getSyncStatus() {
    return syncStatus;
  }


  public void setSyncStatus(SyncStatusEnum syncStatus) {
    this.syncStatus = syncStatus;
  }


  public ConnectorSyncEventDto syncCount(Long syncCount) {
    
    this.syncCount = syncCount;
    return this;
  }

   /**
   * Get syncCount
   * @return syncCount
  **/
  @ApiModelProperty(required = true, value = "")

  public Long getSyncCount() {
    return syncCount;
  }


  public void setSyncCount(Long syncCount) {
    this.syncCount = syncCount;
  }


  public ConnectorSyncEventDto message(String message) {
    
    this.message = message;
    return this;
  }

   /**
   * Get message
   * @return message
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getMessage() {
    return message;
  }


  public void setMessage(String message) {
    this.message = message;
  }


  public ConnectorSyncEventDto createdAt(OffsetDateTime createdAt) {
    
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Get createdAt
   * @return createdAt
  **/
  @ApiModelProperty(required = true, value = "")

  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }


  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ConnectorSyncEventDto connectorSyncEventDto = (ConnectorSyncEventDto) o;
    return Objects.equals(this.id, connectorSyncEventDto.id) &&
        Objects.equals(this.connectorId, connectorSyncEventDto.connectorId) &&
        Objects.equals(this.syncStatus, connectorSyncEventDto.syncStatus) &&
        Objects.equals(this.syncCount, connectorSyncEventDto.syncCount) &&
        Objects.equals(this.message, connectorSyncEventDto.message) &&
        Objects.equals(this.createdAt, connectorSyncEventDto.createdAt);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, connectorId, syncStatus, syncCount, message, createdAt);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ConnectorSyncEventDto {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    connectorId: ").append(toIndentedString(connectorId)).append("\n");
    sb.append("    syncStatus: ").append(toIndentedString(syncStatus)).append("\n");
    sb.append("    syncCount: ").append(toIndentedString(syncCount)).append("\n");
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

