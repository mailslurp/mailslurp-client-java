/*
 * MailSlurp API
 * MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It's designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.   ## Resources - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://www.mailslurp.com/docs/) - [Examples](https://github.com/mailslurp/examples) repository 
 *
 * The version of the OpenAPI document: beb7302db3b2458f4bba957b81a42c95e2289b11
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.mailslurp.api.api;

import com.mailslurp.client.ApiException;
import com.mailslurp.models.CreateDomainOptions;
import com.mailslurp.models.DomainDto;
import com.mailslurp.models.DomainPreview;
import java.util.UUID;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DomainControllerApi
 */
@Ignore
public class DomainControllerApiTest {

    private final DomainControllerApi api = new DomainControllerApi();

    
    /**
     * Create Domain
     *
     * Link a domain that you own with MailSlurp so you can create email addresses using it. Endpoint returns DNS records used for validation. You must add these verification records to your host provider&#39;s DNS setup to verify the domain.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createDomainTest() throws ApiException {
        CreateDomainOptions domainOptions = null;
        DomainDto response = api.createDomain(domainOptions);

        // TODO: test validations
    }
    
    /**
     * Delete a domain
     *
     * Delete a domain. This will disable any existing inboxes that use this domain.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteDomainTest() throws ApiException {
        UUID id = null;
        api.deleteDomain(id);

        // TODO: test validations
    }
    
    /**
     * Get a domain
     *
     * Returns domain verification status and tokens for a given domain
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getDomainTest() throws ApiException {
        UUID id = null;
        DomainDto response = api.getDomain(id);

        // TODO: test validations
    }
    
    /**
     * Get domains
     *
     * List all custom domains you have created
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getDomainsTest() throws ApiException {
        List<DomainPreview> response = api.getDomains();

        // TODO: test validations
    }
    
}
