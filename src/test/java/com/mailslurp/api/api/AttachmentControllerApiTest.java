/*
 * MailSlurp API
 * ## Introduction  [MailSlurp](https://www.mailslurp.com) is an Email API for developers and QA testers. It let's users: - create emails addresses on demand - receive emails and attachments in code - send templated HTML emails  ## About  This page contains the REST API documentation for MailSlurp. All requests require API Key authentication passed as an `x-api-key` header.  Create an account to [get your free API Key](https://app.mailslurp.com/sign-up/).  ## Resources - üîë [Get API Key](https://app.mailslurp.com/sign-up/)                    - üéì [Developer Portal](https://www.mailslurp.com/docs/)           - üì¶ [Library SDKs](https://www.mailslurp.com/docs/) - ‚úçÔ∏è [Code Examples](https://www.mailslurp.com/examples) - ‚ö†Ô∏è [Report an issue](https://drift.me/mailslurp)  ## Explore  
 *
 * The version of the OpenAPI document: 6.5.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.mailslurp.api.api;

import com.mailslurp.client.ApiException;
import java.io.File;
import com.mailslurp.models.UploadAttachmentOptions;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AttachmentControllerApi
 */
@Ignore
public class AttachmentControllerApiTest {

    private final AttachmentControllerApi api = new AttachmentControllerApi();

    
    /**
     * Upload an attachment for sending
     *
     * When sending emails with attachments first upload each attachment with this endpoint. Record the returned attachment IDs. Then use these attachment IDs in the SendEmailOptions when sending an email. This means that attachments can easily be reused.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void uploadAttachmentTest() throws ApiException {
        UploadAttachmentOptions uploadOptions = null;
        List<String> response = api.uploadAttachment(uploadOptions);

        // TODO: test validations
    }
    
    /**
     * Upload an attachment for sending using Multipart Form
     *
     * When sending emails with attachments first upload each attachment with this endpoint. Record the returned attachment IDs. Then use these attachment IDs in the SendEmailOptions when sending an email. This means that attachments can easily be reused.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void uploadMultipartFormTest() throws ApiException {
        File file = null;
        String contentType = null;
        String filename = null;
        List<String> response = api.uploadMultipartForm(file, contentType, filename);

        // TODO: test validations
    }
    
}
