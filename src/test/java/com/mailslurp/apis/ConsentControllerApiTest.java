/*
 * MailSlurp API
 * MailSlurp is an API for sending and receiving emails and SMS from dynamically allocated email addresses and phone numbers. It's designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
 *
 * The version of the OpenAPI document: 6.5.2
 * Contact: contact@mailslurp.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.mailslurp.apis;

import com.mailslurp.clients.ApiException;
import com.mailslurp.models.OptInConsentOptions;
import com.mailslurp.models.OptInConsentSendResult;
import com.mailslurp.models.OptInSendingConsentDto;
import com.mailslurp.models.PageOptInIdentityProjection;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ConsentControllerApi
 */
@Disabled
public class ConsentControllerApiTest {

    private final ConsentControllerApi api = new ConsentControllerApi();

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void checkSendingConsentForEmailAddressTest() throws ApiException {
        String emailAddress = null;
        OptInSendingConsentDto response = api.checkSendingConsentForEmailAddress(emailAddress)
                .execute();
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getOptInIdentitiesTest() throws ApiException {
        Integer page = null;
        Integer size = null;
        String sort = null;
        PageOptInIdentityProjection response = api.getOptInIdentities()
                .page(page)
                .size(size)
                .sort(sort)
                .execute();
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void revokeOptInConsentForEmailAddressTest() throws ApiException {
        String emailAddress = null;
        OptInSendingConsentDto response = api.revokeOptInConsentForEmailAddress(emailAddress)
                .execute();
        // TODO: test validations
    }

    /**
     * Send a verification code to a user once they have explicitly submitted their email address
     *
     * Send double-opt in consent for an email address
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void sendOptInConsentForEmailAddressTest() throws ApiException {
        OptInConsentOptions optInConsentOptions = null;
        OptInConsentSendResult response = api.sendOptInConsentForEmailAddress(optInConsentOptions)
                .execute();
        // TODO: test validations
    }

}
