/*
 * MailSlurp API
 * MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It's designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
 *
 * The version of the OpenAPI document: 6.5.2
 * Contact: contact@mailslurp.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.mailslurp.apis;

import com.mailslurp.clients.ApiException;
import com.mailslurp.models.CreateEmergencyAddressOptions;
import com.mailslurp.models.EmergencyAddress;
import com.mailslurp.models.EmergencyAddressDto;
import com.mailslurp.models.EmptyResponseDto;
import java.time.OffsetDateTime;
import com.mailslurp.models.PagePhoneNumberProjection;
import com.mailslurp.models.PhoneNumberDto;
import com.mailslurp.models.PhonePlanDto;
import java.util.UUID;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for PhoneControllerApi
 */
@Ignore
public class PhoneControllerApiTest {

    private final PhoneControllerApi api = new PhoneControllerApi();

    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createEmergencyAddressTest() throws ApiException {
        CreateEmergencyAddressOptions createEmergencyAddressOptions = null;
        EmergencyAddress response = api.createEmergencyAddress(createEmergencyAddressOptions);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteEmergencyAddressTest() throws ApiException {
        UUID addressId = null;
        EmptyResponseDto response = api.deleteEmergencyAddress(addressId);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deletePhoneNumberTest() throws ApiException {
        UUID phoneNumberId = null;
        api.deletePhoneNumber(phoneNumberId);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getEmergencyAddressTest() throws ApiException {
        UUID addressId = null;
        EmergencyAddress response = api.getEmergencyAddress(addressId);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getEmergencyAddressesTest() throws ApiException {
        List<EmergencyAddressDto> response = api.getEmergencyAddresses();

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getPhoneNumberTest() throws ApiException {
        UUID phoneNumberId = null;
        PhoneNumberDto response = api.getPhoneNumber(phoneNumberId);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getPhoneNumbersTest() throws ApiException {
        Integer page = null;
        Integer size = null;
        String sort = null;
        OffsetDateTime since = null;
        OffsetDateTime before = null;
        PagePhoneNumberProjection response = api.getPhoneNumbers(page, size, sort, since, before);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getPhonePlansTest() throws ApiException {
        List<PhonePlanDto> response = api.getPhonePlans();

        // TODO: test validations
    }
    
}
