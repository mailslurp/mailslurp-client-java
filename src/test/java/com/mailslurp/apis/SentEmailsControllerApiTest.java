/*
 * MailSlurp API
 * MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It's designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://www.mailslurp.com/docs/) - [Examples](https://github.com/mailslurp/examples) repository 
 *
 * The version of the OpenAPI document: 6.5.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.mailslurp.apis;

import com.mailslurp.clients.ApiException;
import com.mailslurp.models.PageSentEmailProjection;
import com.mailslurp.models.PageTrackingPixelProjection;
import com.mailslurp.models.SentEmailDto;
import java.util.UUID;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for SentEmailsControllerApi
 */
@Ignore
public class SentEmailsControllerApiTest {

    private final SentEmailsControllerApi api = new SentEmailsControllerApi();

    
    /**
     * Get all sent email tracking pixels in paginated form
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAllSentTrackingPixelsTest() throws ApiException {
        Integer page = null;
        String searchFilter = null;
        Integer size = null;
        String sort = null;
        PageTrackingPixelProjection response = api.getAllSentTrackingPixels(page, searchFilter, size, sort);

        // TODO: test validations
    }
    
    /**
     * Get sent email receipt
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getSentEmailTest() throws ApiException {
        UUID id = null;
        SentEmailDto response = api.getSentEmail(id);

        // TODO: test validations
    }
    
    /**
     * Get sent email HTML content
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getSentEmailHTMLContentTest() throws ApiException {
        UUID id = null;
        String response = api.getSentEmailHTMLContent(id);

        // TODO: test validations
    }
    
    /**
     * Get all tracking pixels for a sent email in paginated form
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getSentEmailTrackingPixelsTest() throws ApiException {
        UUID id = null;
        Integer page = null;
        String searchFilter = null;
        Integer size = null;
        String sort = null;
        PageTrackingPixelProjection response = api.getSentEmailTrackingPixels(id, page, searchFilter, size, sort);

        // TODO: test validations
    }
    
    /**
     * Get all sent emails in paginated form
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getSentEmailsTest() throws ApiException {
        UUID inboxId = null;
        Integer page = null;
        String searchFilter = null;
        Integer size = null;
        String sort = null;
        PageSentEmailProjection response = api.getSentEmails(inboxId, page, searchFilter, size, sort);

        // TODO: test validations
    }
    
    /**
     * Get all sent organization emails in paginated form
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getSentOrganizationEmailsTest() throws ApiException {
        UUID inboxId = null;
        Integer page = null;
        String searchFilter = null;
        Integer size = null;
        String sort = null;
        PageSentEmailProjection response = api.getSentOrganizationEmails(inboxId, page, searchFilter, size, sort);

        // TODO: test validations
    }
    
}
