/*
 * MailSlurp API
 * MailSlurp is an API for sending and receiving emails and SMS from dynamically allocated email addresses and phone numbers. It's designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
 *
 * The version of the OpenAPI document: 6.5.2
 * Contact: contact@mailslurp.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.mailslurp.apis;

import com.mailslurp.clients.ApiException;
import com.mailslurp.models.CreatePortalOptions;
import com.mailslurp.models.CreatePortalUserOptions;
import com.mailslurp.models.GuestPortalDto;
import com.mailslurp.models.GuestPortalUserCreateDto;
import com.mailslurp.models.GuestPortalUserDto;
import java.time.OffsetDateTime;
import com.mailslurp.models.PageGuestPortalUsers;
import java.util.UUID;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for GuestPortalControllerApi
 */
@Disabled
public class GuestPortalControllerApiTest {

    private final GuestPortalControllerApi api = new GuestPortalControllerApi();

    /**
     * Create a portal page for your customers or clients to log into email accounts and view emails.
     *
     * Create a guest login page for customers or clients to access assigned email addresses
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createGuestPortalTest() throws ApiException {
        CreatePortalOptions createPortalOptions = null;
        GuestPortalDto response = api.createGuestPortal(createPortalOptions)
                .execute();
        // TODO: test validations
    }

    /**
     * Create a portal guest user
     *
     * Add customer to portal
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createGuestPortalUserTest() throws ApiException {
        UUID portalId = null;
        CreatePortalUserOptions createPortalUserOptions = null;
        GuestPortalUserCreateDto response = api.createGuestPortalUser(portalId, createPortalUserOptions)
                .execute();
        // TODO: test validations
    }

    /**
     * Get all guest users for portal
     *
     * Get all customers for a portal
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAllGuestPortalUsersTest() throws ApiException {
        UUID portalId = null;
        String search = null;
        Integer page = null;
        Integer size = null;
        String sort = null;
        OffsetDateTime since = null;
        OffsetDateTime before = null;
        PageGuestPortalUsers response = api.getAllGuestPortalUsers()
                .portalId(portalId)
                .search(search)
                .page(page)
                .size(size)
                .sort(sort)
                .since(since)
                .before(before)
                .execute();
        // TODO: test validations
    }

    /**
     * Get a client email portal
     *
     * Fetch a customer guest portal
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getGuestPortalTest() throws ApiException {
        UUID portalId = null;
        GuestPortalDto response = api.getGuestPortal(portalId)
                .execute();
        // TODO: test validations
    }

    /**
     * Get guest user for portal
     *
     * Get customer for portal
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getGuestPortalUserTest() throws ApiException {
        UUID portalId = null;
        UUID guestId = null;
        GuestPortalUserDto response = api.getGuestPortalUser(portalId, guestId)
                .execute();
        // TODO: test validations
    }

    /**
     * Get guest user
     *
     * Get customer by ID
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getGuestPortalUserByIdTest() throws ApiException {
        UUID guestId = null;
        GuestPortalUserDto response = api.getGuestPortalUserById(guestId)
                .execute();
        // TODO: test validations
    }

    /**
     * Get all guest users for portal
     *
     * Get customers for a portal
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getGuestPortalUsersTest() throws ApiException {
        UUID portalId = null;
        String search = null;
        Integer page = null;
        Integer size = null;
        String sort = null;
        OffsetDateTime since = null;
        OffsetDateTime before = null;
        PageGuestPortalUsers response = api.getGuestPortalUsers(portalId)
                .search(search)
                .page(page)
                .size(size)
                .sort(sort)
                .since(since)
                .before(before)
                .execute();
        // TODO: test validations
    }

    /**
     * Get guest portals
     *
     * Get portals
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getGuestPortalsTest() throws ApiException {
        List<GuestPortalDto> response = api.getGuestPortals()
                .execute();
        // TODO: test validations
    }

}
