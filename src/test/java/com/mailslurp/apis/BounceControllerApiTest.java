/*
 * MailSlurp API
 * MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It's designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://www.mailslurp.com/docs/) - [Examples](https://github.com/mailslurp/examples) repository
 *
 * The version of the OpenAPI document: 6.5.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.mailslurp.apis;

import com.mailslurp.clients.ApiException;
import com.mailslurp.models.BouncedEmailDto;
import com.mailslurp.models.BouncedRecipientDto;
import java.time.OffsetDateTime;
import com.mailslurp.models.PageBouncedEmail;
import com.mailslurp.models.PageBouncedRecipients;
import java.util.UUID;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for BounceControllerApi
 */
@Ignore
public class BounceControllerApiTest {

    private final BounceControllerApi api = new BounceControllerApi();

    
    /**
     * Get a bounced email.
     *
     * Bounced emails are email you have sent that were rejected by a recipient
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getBouncedEmailTest() throws ApiException {
        UUID id = null;
        BouncedEmailDto response = api.getBouncedEmail(id);

        // TODO: test validations
    }
    
    /**
     * Get paginated list of bounced emails.
     *
     * Bounced emails are email you have sent that were rejected by a recipient
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getBouncedEmailsTest() throws ApiException {
        OffsetDateTime before = null;
        Integer page = null;
        OffsetDateTime since = null;
        Integer size = null;
        String sort = null;
        PageBouncedEmail response = api.getBouncedEmails(before, page, since, size, sort);

        // TODO: test validations
    }
    
    /**
     * Get a bounced email.
     *
     * Bounced emails are email you have sent that were rejected by a recipient
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getBouncedRecipientTest() throws ApiException {
        UUID id = null;
        BouncedRecipientDto response = api.getBouncedRecipient(id);

        // TODO: test validations
    }
    
    /**
     * Get paginated list of bounced recipients.
     *
     * Bounced recipients are email addresses that you have sent emails to that did not accept the sent email. Once a recipient is bounced you cannot send emails to that address.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getBouncedRecipientsTest() throws ApiException {
        OffsetDateTime before = null;
        Integer page = null;
        OffsetDateTime since = null;
        Integer size = null;
        String sort = null;
        PageBouncedRecipients response = api.getBouncedRecipients(before, page, since, size, sort);

        // TODO: test validations
    }
    
}
