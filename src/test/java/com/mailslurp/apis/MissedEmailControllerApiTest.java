/*
 * MailSlurp API
 * MailSlurp is an API for sending and receiving emails and SMS from dynamically allocated email addresses and phone numbers. It's designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
 *
 * The version of the OpenAPI document: 6.5.2
 * Contact: contact@mailslurp.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.mailslurp.apis;

import com.mailslurp.clients.ApiException;
import com.mailslurp.models.MissedEmailDto;
import java.time.OffsetDateTime;
import com.mailslurp.models.PageMissedEmailProjection;
import com.mailslurp.models.PageUnknownMissedEmailProjection;
import java.util.UUID;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for MissedEmailControllerApi
 */
@Disabled
public class MissedEmailControllerApiTest {

    private final MissedEmailControllerApi api = new MissedEmailControllerApi();

    /**
     * Get all MissedEmails in paginated format
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAllMissedEmailsTest() throws ApiException {
        Integer page = null;
        Integer size = null;
        String sort = null;
        String searchFilter = null;
        OffsetDateTime since = null;
        OffsetDateTime before = null;
        UUID inboxId = null;
        PageMissedEmailProjection response = api.getAllMissedEmails()
                .page(page)
                .size(size)
                .sort(sort)
                .searchFilter(searchFilter)
                .since(since)
                .before(before)
                .inboxId(inboxId)
                .execute();
        // TODO: test validations
    }

    /**
     * Get all unknown missed emails in paginated format
     *
     * Unknown missed emails are emails that were sent to MailSlurp but could not be assigned to an existing inbox.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAllUnknownMissedEmailsTest() throws ApiException {
        Integer page = null;
        Integer size = null;
        String sort = null;
        String searchFilter = null;
        OffsetDateTime since = null;
        OffsetDateTime before = null;
        UUID inboxId = null;
        PageUnknownMissedEmailProjection response = api.getAllUnknownMissedEmails()
                .page(page)
                .size(size)
                .sort(sort)
                .searchFilter(searchFilter)
                .since(since)
                .before(before)
                .inboxId(inboxId)
                .execute();
        // TODO: test validations
    }

    /**
     * Get MissedEmail
     *
     * List emails that were missed due to plan limits.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getMissedEmailTest() throws ApiException {
        UUID missedEmailId = null;
        MissedEmailDto response = api.getMissedEmail(missedEmailId)
                .execute();
        // TODO: test validations
    }

    /**
     * Restore missed emails
     *
     * If emails were missed due to a plan limit they are saved as missed emails. If support team enables the canRestore flag these emails can be reload into your account using this method.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void restoreMissedEmailsTest() throws ApiException {
        api.restoreMissedEmails()
                .execute();
        // TODO: test validations
    }

    /**
     * Wait for Nth missed email
     *
     * Wait for 0 based index missed email
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void waitForNthMissedEmailTest() throws ApiException {
        Integer index = null;
        UUID inboxId = null;
        Long timeout = null;
        OffsetDateTime since = null;
        OffsetDateTime before = null;
        MissedEmailDto response = api.waitForNthMissedEmail(index)
                .inboxId(inboxId)
                .timeout(timeout)
                .since(since)
                .before(before)
                .execute();
        // TODO: test validations
    }

}
