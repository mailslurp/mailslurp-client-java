/*
 * MailSlurp API
 * ## Introduction  [MailSlurp](https://www.mailslurp.com) is an Email API for developers and QA testers. It let's users: - create emails addresses on demand - receive emails and attachments in code - send templated HTML emails  ## About  This page contains the REST API documentation for MailSlurp. All requests require API Key authentication passed as an `x-api-key` header.  Create an account to [get your free API Key](https://app.mailslurp.com/sign-up/).  ## Resources - üîë [Get API Key](https://app.mailslurp.com/sign-up/)                    - üéì [Developer Portal](https://www.mailslurp.com/docs/)           - üì¶ [Library SDKs](https://www.mailslurp.com/docs/) - ‚úçÔ∏è [Code Examples](https://www.mailslurp.com/examples) - ‚ö†Ô∏è [Report an issue](https://drift.me/mailslurp)  ## Explore  
 *
 * The version of the OpenAPI document: 6.5.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.mailslurp.models;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for JsonNode
 */
public class JsonNodeTest {
    private final JsonNode model = new JsonNode();

    /**
     * Model tests for JsonNode
     */
    @Test
    public void testJsonNode() {
        // TODO: test JsonNode
    }

    /**
     * Test the property 'array'
     */
    @Test
    public void arrayTest() {
        // TODO: test array
    }

    /**
     * Test the property 'bigDecimal'
     */
    @Test
    public void bigDecimalTest() {
        // TODO: test bigDecimal
    }

    /**
     * Test the property 'bigInteger'
     */
    @Test
    public void bigIntegerTest() {
        // TODO: test bigInteger
    }

    /**
     * Test the property 'binary'
     */
    @Test
    public void binaryTest() {
        // TODO: test binary
    }

    /**
     * Test the property '_boolean'
     */
    @Test
    public void _booleanTest() {
        // TODO: test _boolean
    }

    /**
     * Test the property 'containerNode'
     */
    @Test
    public void containerNodeTest() {
        // TODO: test containerNode
    }

    /**
     * Test the property '_double'
     */
    @Test
    public void _doubleTest() {
        // TODO: test _double
    }

    /**
     * Test the property 'empty'
     */
    @Test
    public void emptyTest() {
        // TODO: test empty
    }

    /**
     * Test the property '_float'
     */
    @Test
    public void _floatTest() {
        // TODO: test _float
    }

    /**
     * Test the property 'floatingPointNumber'
     */
    @Test
    public void floatingPointNumberTest() {
        // TODO: test floatingPointNumber
    }

    /**
     * Test the property '_int'
     */
    @Test
    public void _intTest() {
        // TODO: test _int
    }

    /**
     * Test the property 'integralNumber'
     */
    @Test
    public void integralNumberTest() {
        // TODO: test integralNumber
    }

    /**
     * Test the property '_long'
     */
    @Test
    public void _longTest() {
        // TODO: test _long
    }

    /**
     * Test the property 'missingNode'
     */
    @Test
    public void missingNodeTest() {
        // TODO: test missingNode
    }

    /**
     * Test the property 'nodeType'
     */
    @Test
    public void nodeTypeTest() {
        // TODO: test nodeType
    }

    /**
     * Test the property '_null'
     */
    @Test
    public void _nullTest() {
        // TODO: test _null
    }

    /**
     * Test the property 'number'
     */
    @Test
    public void numberTest() {
        // TODO: test number
    }

    /**
     * Test the property '_object'
     */
    @Test
    public void _objectTest() {
        // TODO: test _object
    }

    /**
     * Test the property 'pojo'
     */
    @Test
    public void pojoTest() {
        // TODO: test pojo
    }

    /**
     * Test the property '_short'
     */
    @Test
    public void _shortTest() {
        // TODO: test _short
    }

    /**
     * Test the property 'textual'
     */
    @Test
    public void textualTest() {
        // TODO: test textual
    }

    /**
     * Test the property 'valueNode'
     */
    @Test
    public void valueNodeTest() {
        // TODO: test valueNode
    }

}
